{"version":3,"sources":["EventSelectionInterface.jsx","index.js"],"names":["selectedEvent","EventSelectionInterface","props","state","numClicks","isFocused","render","theme","style","borderStyling","primaryColor","border","outline","className","id","events","map","el","indx","onClick","e","preventDefault","onSelected","header","subheader","setState","Streamlit","setComponentValue","start_char","end_char","inputRef","React","createRef","startRef","args","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"kQASIA,G,YAAgB,MAEdC,EAAuB,kDAE3B,WAAYC,GAAQ,IAAD,EAI4B,OAJ5B,qBACjB,cAAMA,IAFRC,MAAQ,CAAEC,UAAW,EAAGC,WAAW,GAAO,EAQ1CC,OAAS,WACP,IAAQC,EAAU,EAAKL,MAAfK,MACFC,EAAQ,GAId,GAAID,EAAO,CAGT,IAAME,EAAa,oBACjB,EAAKN,MAAME,UAAYE,EAAMG,aAAe,QAE9CF,EAAMG,OAASF,EACfD,EAAMI,QAAUH,EAElB,OACE,yBAAKI,UAAU,gBAAgBC,GAAG,SAChC,6BACE,yBAAKD,UAAU,8BAA8BC,GAAG,SAC7C,EAAKC,OAAOC,KAAI,SAACC,EAAIC,GAAI,OACxB,yBACEL,UACEb,IAAkBkB,EAAO,kBAAoB,SAE/CC,QAAS,SAACC,GACRA,EAAEC,iBACF,EAAKC,WAAWJ,KAGlB,2BAAID,EAAGM,QACNvB,IAAkBkB,EACjB,yBAAKL,UAAU,mBACb,2BAAI,EAAKE,OAAOf,GAAewB,YAGjC,QAKR,yBAAKX,UAAU,4BAItB,EAGDS,WAAa,SAACJ,GACZlB,EAAgBkB,EAChB,EAAKO,SAAS,CAAEzB,cAAekB,IAC/B,EAAKO,UAAS,kBACZC,IAAUC,kBAAkB,CAC1BC,WAAY,EAAKb,OAAOf,GAAe4B,WACvCC,SAAU,EAAKd,OAAOf,GAAe6B,eA1DzC,EAAKC,SAAWC,IAAMC,YACtB,EAAKC,SAAWF,IAAMC,YACtB,EAAKjB,OAAS,EAAKb,MAAMgC,KAAY,MAAEnB,OAAM,EAC9C,sBAP0B,CAASoB,KAoEvBC,cAAwBnC,GC3EvCoC,IAAS/B,OACP,kBAAC,IAAMgC,WAAU,KACf,kBAAC,EAAuB,OAE1BC,SAASC,eAAe,W","file":"static/js/main.c5e881ee.chunk.js","sourcesContent":["import {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport { useRenderData } from \"streamlit-component-lib-react-hooks\"\r\nimport React, { ReactNode, useEffect, useRef, useState } from \"react\"\r\nimport { spawn } from \"child_process\"\r\n\r\nlet selectedEvent = null\r\n\r\nclass EventSelectionInterface extends StreamlitComponentBase {\r\n  state = { numClicks: 0, isFocused: false }\r\n  constructor(props) {\r\n    super(props)\r\n    this.inputRef = React.createRef()\r\n    this.startRef = React.createRef()\r\n    this.events = this.props.args[\"event\"].events\r\n  }\r\n\r\n  render = () => {\r\n    const { theme } = this.props\r\n    const style = {}\r\n\r\n    // Maintain compatibility with older versions of Streamlit that don't send\r\n    // a theme object.\r\n    if (theme) {\r\n      // Use the theme object to style our button border. Alternatively, the\r\n      // theme style is defined in CSS vars.\r\n      const borderStyling = `1px solid ${\r\n        this.state.isFocused ? theme.primaryColor : \"gray\"\r\n      }`\r\n      style.border = borderStyling\r\n      style.outline = borderStyling\r\n    }\r\n    return (\r\n      <div className=\"event-section\" id=\"style\">\r\n        <div>\r\n          <div className=\"header-container  scrollbar\" id=\"style\">\r\n            {this.events.map((el, indx) => (\r\n              <div\r\n                className={\r\n                  selectedEvent === indx ? \"selected header\" : \"header\"\r\n                }\r\n                onClick={(e) => {\r\n                  e.preventDefault()\r\n                  this.onSelected(indx)\r\n                }}\r\n              >\r\n                <p>{el.header}</p>\r\n                {selectedEvent === indx ? (\r\n                  <div className=\"sub-headers-div\">\r\n                    <p>{this.events[selectedEvent].subheader}</p>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"sub-header-container\"></div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  /** Focus handler for our \"Click Me!\" button. */\r\n  onSelected = (indx) => {\r\n    selectedEvent = indx\r\n    this.setState({ selectedEvent: indx })\r\n    this.setState(() =>\r\n      Streamlit.setComponentValue({\r\n        start_char: this.events[selectedEvent].start_char,\r\n        end_char: this.events[selectedEvent].end_char,\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStreamlitConnection(EventSelectionInterface)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport EventSelectionInterface from \"./EventSelectionInterface\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <EventSelectionInterface />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}