{"version":3,"sources":["TextNav.jsx","index.js"],"names":["TextNav","props","state","numClicks","isFocused","render","data","args","start_char","end_char","text","slice","className","id","ref","parentRef","map","el","indx","startRef","React","createRef","Streamlit","setFrameHeight","setTimeout","current","scrollIntoView","behavior","block","inline","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"0OAOMA,EAAO,kDAEX,WAAYC,GAAQ,IAAD,EAEgB,OAFhB,qBACjB,cAAMA,IAFRC,MAAQ,CAAEC,UAAW,EAAGC,WAAW,GAAO,EA4B1CC,OAAS,WACP,IAAIC,EAAO,EAAKL,MAAMM,KAAW,KAC7BC,EAAa,EAAKP,MAAMM,KAAiB,WACzCE,EAAW,EAAKR,MAAMM,KAAe,SAErCG,EAAO,GAMX,OAFAA,EAAO,CAHiBJ,EAAKK,MAAM,EAAGH,GACpBF,EAAKK,MAAMH,EAAYC,GAClBH,EAAKK,MAAMF,IAIhC,yBAAKG,UAAU,sBAAsBC,GAAG,QAAQC,IAAK,EAAKC,WACxD,uBAAGH,UAAU,aACVF,EAAKM,KAAI,SAACC,EAAIC,GACb,OAAgB,IAATA,EACL,0BAAMJ,IAAK,EAAKK,SAAUP,UAAU,uBAAqB,UACnDK,IAEJA,QA5CZ,EAAKE,SAAWC,IAAMC,YAAW,EAuBlC,OAtBA,8CACD,WAAqB,IAAD,OAClBC,IAAUC,iBAEVC,YAAW,WACT,EAAKL,SAASM,QAAQC,eAAe,CACnCC,SAAU,SACVC,MAAO,YAER,OACJ,gCAED,WAAsB,IAAD,OACnBN,IAAUC,iBAEVC,YAAW,WACT,EAAKL,SAASM,QAAQC,eAAe,CACnCC,SAAU,SACVC,MAAO,QACPC,OAAQ,YAET,SACJ,EA3BU,CAASC,KAwDPC,cAAwB/B,GC3DvCgC,IAAS3B,OACP,kBAAC,IAAM4B,WAAU,KACf,kBAAC,EAAO,OAEVC,SAASC,eAAe,W","file":"static/js/main.c0c60160.chunk.js","sourcesContent":["import {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport React from \"react\"\r\n\r\nclass TextNav extends StreamlitComponentBase {\r\n  state = { numClicks: 0, isFocused: false }\r\n  constructor(props) {\r\n    super(props)\r\n    this.startRef = React.createRef()\r\n  }\r\n  componentDidMount() {\r\n    Streamlit.setFrameHeight()\r\n\r\n    setTimeout(() => {\r\n      this.startRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"start\",\r\n      })\r\n    }, 100)\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    Streamlit.setFrameHeight()\r\n\r\n    setTimeout(() => {\r\n      this.startRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"start\",\r\n        inline: \"start\",\r\n      })\r\n    }, 100)\r\n  }\r\n\r\n  render = () => {\r\n    let data = this.props.args[\"text\"]\r\n    let start_char = this.props.args[\"start_char\"]\r\n    let end_char = this.props.args[\"end_char\"]\r\n\r\n    let text = []\r\n    let beforeHighlightEl = data.slice(0, start_char)\r\n    let highlightEl = data.slice(start_char, end_char)\r\n    let afterHighlightEl = data.slice(end_char)\r\n    text = [beforeHighlightEl, highlightEl, afterHighlightEl]\r\n\r\n    return (\r\n      <div className=\"text-wall scrollbar\" id=\"style\" ref={this.parentRef}>\r\n        <p className=\"text-para\">\r\n          {text.map((el, indx) => {\r\n            return indx === 1 ? (\r\n              <span ref={this.startRef} className=\"highlighted-section\">\r\n                {`${el}`}\r\n              </span>\r\n            ) : el\r\n          })}\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStreamlitConnection(TextNav)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport TextNav from './TextNav'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <TextNav />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}