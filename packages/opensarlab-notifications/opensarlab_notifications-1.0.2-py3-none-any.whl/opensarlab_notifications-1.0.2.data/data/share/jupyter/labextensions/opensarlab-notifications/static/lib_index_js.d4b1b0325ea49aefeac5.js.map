{"version":3,"file":"lib_index_js.d4b1b0325ea49aefeac5.js","mappings":";;;;;;;;;;;;;;;;;AAA+C;AACS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACO,kDAAkD;AACzD;AACA,qBAAqB,+EAA6B;AAClD,uBAAuB,8DAAW;AAClC;AACA;AACA;AACA,yBAAyB,8EAA4B;AACrD;AACA;AACA,kBAAkB,+EAA6B;AAC/C;AACA;AACA;AACA,kBAAkB,gFAA8B;AAChD;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC1B4B;AACA;AACW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,6CAAM;AAClB,gBAAgB,uDAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oDAAU;AAC5C;AACA;AACA;AACA,wBAAwB,+CAAM;AAC9B,qBAAqB;AACrB;AACA;AACA,4FAA4F,OAAO;AACnG;AACA,aAAa;AACb;AACA;AACA,mFAAmF,OAAO;AAC1F;AACA,KAAK;AACL;AACA,iEAAe,SAAS,EAAC","sources":["webpack://opensarlab-notifications/./lib/handler.js","webpack://opensarlab-notifications/./lib/index.js"],"sourcesContent":["import { URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\n/**\n * Call the API extension\n *\n * @param endPoint API REST end point for the extension\n * @param init Initial values for the request\n * @returns The response body interpreted as JSON\n */\nexport async function requestAPI(endPoint = '', init = {}) {\n    // Make request to Jupyter API\n    const settings = ServerConnection.makeSettings();\n    const requestUrl = URLExt.join(settings.baseUrl, 'opensarlab-notifications', // API Namespace\n    endPoint);\n    let response;\n    try {\n        response = await ServerConnection.makeRequest(requestUrl, init, settings);\n    }\n    catch (error) {\n        throw new ServerConnection.NetworkError(error);\n    }\n    const data = await response.json();\n    if (!response.ok) {\n        throw new ServerConnection.ResponseError(response, data.message);\n    }\n    return data;\n}\n","import jQuery from 'jquery';\nimport toastr from 'toastr';\nimport { requestAPI } from './handler';\nconst extension = {\n    id: 'jupyterlab-topbar-opensarlab-notifications',\n    autoStart: true,\n    activate: async (app) => {\n        try {\n            let toastrLink = document.createElement('link');\n            toastrLink.href = 'https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css';\n            toastrLink.rel = 'stylesheet';\n            document.head.appendChild(toastrLink);\n            jQuery(async () => {\n                toastr.options = {\n                    \"closeButton\": true,\n                    \"newestOnTop\": true,\n                    \"progressBar\": true,\n                    \"positionClass\": \"toast-bottom-right\",\n                    \"preventDuplicates\": false,\n                    \"onclick\": null,\n                    \"showDuration\": 30,\n                    \"hideDuration\": 1,\n                    \"timeOut\": 0,\n                    \"extendedTimeOut\": 0,\n                    \"showEasing\": \"swing\",\n                    \"hideEasing\": \"linear\",\n                    \"showMethod\": \"fadeIn\",\n                    \"hideMethod\": \"fadeOut\"\n                };\n                let notes = null;\n                try {\n                    notes = await requestAPI('notifications');\n                    notes = JSON.parse(notes['data']);\n                    console.log(notes);\n                    notes.forEach(function (entry) {\n                        toastr[entry.type](entry.message, entry.title);\n                    });\n                }\n                catch (reason) {\n                    console.error(`Error on GET /opensarlab-notifications/notifications.\\n${reason}`);\n                }\n            });\n        }\n        catch (reason) {\n            console.error(`Error on GET opensarlab-notifications/notifications.\\n${reason}`);\n        }\n    },\n};\nexport default extension;\n"],"names":[],"sourceRoot":""}