{"version":3,"sources":["services/models/bookmarks/bookmarksAppModel.ts","pages/Bookmarks/Bookmarks.tsx","pages/Bookmarks/BookmarksContainer.tsx","components/ConfirmModal/ConfirmModal.tsx","assets/icons/successIcon.svg","assets/icons/errorIcon.svg","components/NotificationContainer/NotificationContainer.tsx","components/AppBar/AppBar.tsx","components/CodeBlock/CodeBlock.tsx","hooks/useCodeHighlighter.ts","pages/Bookmarks/components/BookmarkCard/BookmarkCard.tsx"],"names":["bookmarksRequestRef","model","createModel","isLoading","listData","notifyData","getBookmarksData","dashboardService","fetchDashboardsList","call","then","data","appsService","fetchAppsList","detail","exceptionHandler","appsList","map","item","app","find","appData","id","app_id","select","state","type","setState","onNotificationAdd","notification","Date","now","messages","message","severity","abort","deleteDashboard","getState","newListData","filter","bookmark","bookmarkAppModel","initialize","init","err","destroy","onBookmarkDelete","onBookmarksNotificationDelete","onNotificationDelete","Bookmarks","ErrorBoundary","className","AppBar","title","pageTitlesEnum","BOOKMARKS","BusyLoaderWrapper","height","length","BookmarkCard","IllustrationBlock","size","page","IllustrationsEnum","EmptyBookmarks","NotificationContainer","handleClose","BookmarksContainer","bookmarksData","useModel","React","useEffect","analytics","ANALYTICS_EVENT_KEYS","bookmarks","pageView","ConfirmModal","props","open","onClose","onCancel","aria-labelledby","aria-describedby","PaperProps","elevation","statusType","color","withOnlyIcon","onClick","name","icon","tint","component","weight","description","text","children","cancelBtnText","onSubmit","variant","autoFocus","confirmBtnText","defaultProps","displayName","memo","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Box","mt","Alert","iconMapping","success","src","successIconImg","alt","error","errorIconImg","style","i","classNames","disabled","CodeBlock","code","language","elementRef","useCodeHighlighter","data-lang","ref","contentRef","monaco","useMonaco","preRef","useRef","monacoConfig","useMemo","getMonacoConfig","theme","config","colors","current","editor","colorizeElement","defineTheme","setTheme","BookmarkIconType","runs","tooltipTitle","images","params","metrics","scatters","useState","openModal","setOpenModal","tags","options","val","label","placement","fontSize","to","view","advancedMode","tag","index","query","advancedQuery"],"mappings":"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","file":"static/js/bookmarks.js?version=6e833ad2c92097688562","sourcesContent":["import dashboardService from 'services/api/dashboard/dashboardService';\nimport appsService from 'services/api/apps/appsService';\n\nimport { IBookmarksAppModelState } from 'types/services/models/bookmarks/bookmarksAppModel';\nimport { IBookmarksData } from 'types/pages/bookmarks/Bookmarks';\n\nimport onNotificationAdd from 'utils/app/onNotificationAdd';\nimport exceptionHandler from 'utils/app/exceptionHandler';\nimport onNotificationDelete from 'utils/app/onNotificationDelete';\n\nimport createModel from '../model';\n\nlet bookmarksRequestRef: {\n  call: (exceptionHandler: (detail: any) => void) => Promise<any>;\n  abort: () => void;\n};\n\nconst model = createModel<IBookmarksAppModelState>({\n  isLoading: true,\n  listData: [],\n  notifyData: [],\n});\n\nfunction getBookmarksData() {\n  const { call, abort } = dashboardService.fetchDashboardsList();\n  return {\n    call: () =>\n      call().then(async (data: any) => {\n        try {\n          const appsList = await appsService\n            .fetchAppsList()\n            .call((detail: any) => {\n              exceptionHandler({ detail, model: model as any });\n            });\n          const listData = data.map((item: any) => {\n            const app = appsList.find(\n              (appData: any) => appData.id === item.app_id,\n            );\n            return { ...item, select: app.state.select, type: app.type };\n          });\n          model.setState({\n            isLoading: false,\n            listData,\n          });\n        } catch (err: any) {\n          onNotificationAdd({\n            notification: {\n              id: Date.now(),\n              messages: [err.message],\n              severity: 'error',\n            },\n            model: model as any,\n          });\n        }\n        model.setState({ isLoading: false });\n      }),\n\n    abort,\n  };\n}\n\nfunction onBookmarksNotificationDelete(id: number) {\n  onNotificationDelete({ id, model });\n}\n\nasync function onBookmarkDelete(id: string) {\n  try {\n    model.setState({ isLoading: true });\n    await dashboardService.deleteDashboard(id).call((detail: any) => {\n      exceptionHandler({ detail, model });\n    });\n    const listData: IBookmarksData[] | any = model.getState()?.listData;\n    const newListData = [...listData].filter((bookmark) => bookmark.id !== id);\n    model.setState({\n      listData: newListData,\n      isLoading: false,\n    });\n  } catch (err: any) {\n    model.setState({\n      isLoading: false,\n    });\n    onNotificationAdd({\n      notification: {\n        id: Date.now(),\n        messages: [err.message],\n        severity: 'error',\n      },\n      model: model as any,\n    });\n  }\n}\n\nfunction initialize() {\n  model.init();\n  try {\n    bookmarksRequestRef = getBookmarksData();\n    bookmarksRequestRef.call((detail) => {\n      exceptionHandler({ detail, model: model as any });\n      model.setState({\n        isLoading: false,\n      });\n    });\n  } catch (err: any) {\n    onNotificationAdd({\n      notification: {\n        id: Date.now(),\n        messages: [err.message],\n        severity: 'error',\n      },\n      model: model as any,\n    });\n    model.setState({\n      isLoading: false,\n    });\n    bookmarksRequestRef.abort();\n  }\n}\n\nfunction destroy() {\n  bookmarksRequestRef.abort();\n  model.destroy();\n}\nconst bookmarkAppModel = {\n  ...model,\n  initialize,\n  destroy,\n  getBookmarksData,\n  onBookmarkDelete,\n  onBookmarksNotificationDelete,\n};\n\nexport default bookmarkAppModel;\n","import React from 'react';\n\nimport AppBar from 'components/AppBar/AppBar';\nimport BusyLoaderWrapper from 'components/BusyLoaderWrapper/BusyLoaderWrapper';\nimport IllustrationBlock from 'components/IllustrationBlock/IllustrationBlock';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\nimport NotificationContainer from 'components/NotificationContainer/NotificationContainer';\n\nimport pageTitlesEnum from 'config/pageTitles/pageTitles';\nimport { IllustrationsEnum } from 'config/illustrationConfig/illustrationConfig';\n\nimport { IBookmarksProps } from 'types/pages/bookmarks/Bookmarks';\n\nimport BookmarkCard from './components/BookmarkCard/BookmarkCard';\n\nimport './Bookmarks.scss';\n\nfunction Bookmarks({\n  data,\n  onBookmarkDelete,\n  isLoading,\n  notifyData,\n  onNotificationDelete,\n}: IBookmarksProps): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <ErrorBoundary>\n      <section className='Bookmarks'>\n        <AppBar\n          title={pageTitlesEnum.BOOKMARKS}\n          className='Bookmarks__appBar'\n        />\n        <div className='Bookmarks__list container'>\n          <BusyLoaderWrapper isLoading={isLoading} height={'100%'}>\n            {data?.length > 0 &&\n              data.map((bookmark) => (\n                <BookmarkCard\n                  key={bookmark.id}\n                  {...bookmark}\n                  onBookmarkDelete={onBookmarkDelete}\n                />\n              ))}\n          </BusyLoaderWrapper>\n          {!isLoading && data?.length === 0 ? (\n            <IllustrationBlock\n              size='xLarge'\n              page='bookmarks'\n              type={IllustrationsEnum.EmptyBookmarks}\n              title={'No Bookmarks Yet'}\n            />\n          ) : null}\n        </div>\n      </section>\n      {notifyData?.length > 0 && (\n        <NotificationContainer\n          handleClose={onNotificationDelete}\n          data={notifyData}\n        />\n      )}\n    </ErrorBoundary>\n  );\n}\n\nexport default Bookmarks;\n","import React from 'react';\nimport { useModel } from 'hooks';\n\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport { ANALYTICS_EVENT_KEYS } from 'config/analytics/analyticsKeysMap';\n\nimport bookmarkAppModel from 'services/models/bookmarks/bookmarksAppModel';\nimport * as analytics from 'services/analytics';\n\nimport { INotification } from 'types/components/NotificationContainer/NotificationContainer';\n\nimport Bookmarks from './Bookmarks';\n\nfunction BookmarksContainer(): React.FunctionComponentElement<React.ReactNode> {\n  const bookmarksData = useModel(bookmarkAppModel);\n\n  React.useEffect(() => {\n    bookmarkAppModel.initialize();\n    analytics.pageView(ANALYTICS_EVENT_KEYS.bookmarks.pageView);\n    return () => {\n      bookmarkAppModel.destroy();\n    };\n  }, []);\n\n  return (\n    <ErrorBoundary>\n      <Bookmarks\n        data={bookmarksData?.listData!}\n        isLoading={bookmarksData?.isLoading!}\n        onBookmarkDelete={bookmarkAppModel.onBookmarkDelete}\n        notifyData={bookmarksData?.notifyData as INotification[]}\n        onNotificationDelete={bookmarkAppModel.onBookmarksNotificationDelete}\n      />\n    </ErrorBoundary>\n  );\n}\n\nexport default BookmarksContainer;\n","import React from 'react';\n\nimport { Dialog } from '@material-ui/core';\n\nimport { Button, Text, Icon } from 'components/kit';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport { IConfirmModalProps } from 'types/components/ConfirmModal/ConfirmModal';\n\nimport './ConfirmModal.scss';\n\nfunction ConfirmModal(\n  props: IConfirmModalProps,\n): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <ErrorBoundary>\n      <Dialog\n        open={props.open}\n        onClose={props.onCancel}\n        aria-labelledby='dialog-title'\n        aria-describedby='dialog-description'\n        PaperProps={{\n          elevation: 10,\n        }}\n        className={`ConfirmModal ConfirmModal__${props.statusType}`}\n      >\n        <div className='ConfirmModal__Body'>\n          <Button\n            size='small'\n            className='ConfirmModal__Close__Icon'\n            color='secondary'\n            withOnlyIcon\n            onClick={props.onCancel}\n          >\n            <Icon name='close' />\n          </Button>\n\n          <div className='ConfirmModal__Title__Container'>\n            <div className='ConfirmModal__Icon'>{props.icon}</div>\n            {props.title && (\n              <Text size={16} tint={100} component='h4' weight={600}>\n                {props.title}\n              </Text>\n            )}\n          </div>\n\n          <div>\n            {props.description && (\n              <Text\n                className='ConfirmModal__description'\n                weight={400}\n                component='p'\n                id='dialog-description'\n              >\n                {props.description}\n              </Text>\n            )}\n\n            <div>\n              {props.text && (\n                <Text\n                  className='ConfirmModal__text'\n                  weight={400}\n                  component='p'\n                  size={14}\n                  id='dialog-description'\n                >\n                  {props.text || ''}\n                </Text>\n              )}\n              {props.children && props.children}\n            </div>\n          </div>\n        </div>\n\n        <div className='ConfirmModal__Footer'>\n          <Button\n            onClick={props.onCancel}\n            className='ConfirmModal__CancelButton'\n          >\n            {props.cancelBtnText}\n          </Button>\n          <Button\n            onClick={props.onSubmit}\n            color='primary'\n            variant='contained'\n            className='ConfirmModal__ConfirmButton'\n            autoFocus\n          >\n            {props.confirmBtnText}\n          </Button>\n        </div>\n      </Dialog>\n    </ErrorBoundary>\n  );\n}\n\nConfirmModal.defaultProps = {\n  confirmBtnText: 'Confirm',\n  cancelBtnText: 'Cancel',\n  statusType: 'info',\n};\n\nConfirmModal.displayName = 'ConfirmModal';\n\nexport default React.memo<IConfirmModalProps>(ConfirmModal);\n","export default __webpack_public_path__ + \"static/media/successIcon.bd3fad23.svg\";","export default __webpack_public_path__ + \"static/media/errorIcon.09cae82c.svg\";","import React from 'react';\n\nimport { Alert } from '@material-ui/lab';\nimport { Box, Snackbar } from '@material-ui/core';\n\nimport successIconImg from 'assets/icons/successIcon.svg';\nimport errorIconImg from 'assets/icons/errorIcon.svg';\n\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport { INotificationContainer } from 'types/components/NotificationContainer/NotificationContainer';\n\nimport './NotificationContainer.scss';\n\nexport default function NotificationContainer({\n  data = [],\n  handleClose,\n}: INotificationContainer): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <ErrorBoundary>\n      <div>\n        <Snackbar\n          open={true}\n          autoHideDuration={3000}\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        >\n          <div className='NotificationContainer'>\n            {data.map(({ id, severity, messages }) => (\n              <Box key={id} mt={0.5}>\n                <Alert\n                  onClose={() => handleClose(+id)}\n                  variant='outlined'\n                  severity={severity}\n                  iconMapping={{\n                    success: <img src={successIconImg} alt='' />,\n                    error: <img src={errorIconImg} alt='' />,\n                  }}\n                  style={{ height: 'auto' }}\n                >\n                  <div className='NotificationContainer__contentBox'>\n                    <p className='NotificationContainer__contentBox__severity'>\n                      {severity}\n                    </p>\n                    {messages.map((message: string, i: number) => {\n                      return message ? (\n                        <p\n                          key={i}\n                          className='NotificationContainer__contentBox__message'\n                        >\n                          {message}\n                        </p>\n                      ) : null;\n                    })}\n                  </div>\n                </Alert>\n              </Box>\n            ))}\n          </div>\n        </Snackbar>\n      </div>\n    </ErrorBoundary>\n  );\n}\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Text } from 'components/kit';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport { IAppBarProps } from 'types/components/AppBar/AppBar';\n\nimport './AppBar.scss';\n\nfunction AppBar(\n  props: IAppBarProps,\n): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <ErrorBoundary>\n      <div\n        className={classNames('AppBar', {\n          [props?.className ?? '']: props.className,\n        })}\n      >\n        <Text\n          component='h3'\n          weight={600}\n          size={14}\n          tint={100}\n          className='AppBar__title'\n        >\n          {props.title}\n        </Text>\n        {props.children && (\n          <div\n            className={classNames('AppBar__content', {\n              'AppBar__content--disabled': props.disabled,\n              [props?.className ?? '']: props.className,\n            })}\n          >\n            {props.children}\n          </div>\n        )}\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default AppBar;\n","import React from 'react';\n\nimport CopyToClipBoard from 'components/CopyToClipBoard/CopyToClipBoard';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport useCodeHighlighter from 'hooks/useCodeHighlighter';\n\nimport { ICodeBlockProps } from 'types/components/CodeBlock/CodeBlock';\n\nimport './CodeBlock.scss';\n\nfunction CodeBlock({\n  code = '',\n  className = '',\n  language = 'python',\n}: ICodeBlockProps): React.FunctionComponentElement<React.ReactNode> {\n  const { elementRef } = useCodeHighlighter(language);\n\n  return (\n    <ErrorBoundary>\n      <div className={`CodeBlock ${className} `}>\n        <pre\n          className='ScrollBar__hidden'\n          data-lang={language}\n          ref={elementRef}\n        >\n          {code}\n        </pre>\n        <ErrorBoundary>\n          <CopyToClipBoard\n            className='CodeBlock__copy__button'\n            contentRef={elementRef}\n          />\n        </ErrorBoundary>\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default React.memo(CodeBlock);\n","import React from 'react';\n\nimport { useMonaco } from '@monaco-editor/react';\n\nimport { getMonacoConfig } from 'config/monacoConfig/monacoConfig';\n\nfunction useCodeHighlighter(language: string = 'python') {\n  const monaco = useMonaco();\n  const preRef = React.useRef<HTMLPreElement>(null);\n\n  const monacoConfig: Record<string | number | symbol, any> =\n    React.useMemo(() => {\n      return getMonacoConfig();\n    }, []);\n\n  React.useEffect(() => {\n    monacoConfig.theme.config.colors = {\n      ...monacoConfig.theme.config.colors,\n      'editor.background': '#f2f3f4',\n    };\n    if (monaco && preRef.current) {\n      monaco.editor.colorizeElement(preRef.current, { theme: language });\n      monaco.editor.defineTheme(\n        monacoConfig.theme.name,\n        monacoConfig.theme.config,\n      );\n      monaco.editor.setTheme(monacoConfig.theme.name);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [monaco]);\n  return { elementRef: preRef };\n}\n\nexport default useCodeHighlighter;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { Tooltip } from '@material-ui/core';\n\nimport ConfirmModal from 'components/ConfirmModal/ConfirmModal';\nimport CodeBlock from 'components/CodeBlock/CodeBlock';\nimport { Button, Icon, Badge, Text } from 'components/kit';\nimport { IconName } from 'components/kit/Icon';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport { ANALYTICS_EVENT_KEYS } from 'config/analytics/analyticsKeysMap';\n\nimport * as analytics from 'services/analytics';\n\nimport { IBookmarkCardProps } from 'types/pages/bookmarks/components/BookmarkCard';\n\nimport './BookmarkCard.scss';\n\nexport const BookmarkIconType: {\n  [key: string]: { name: IconName; tooltipTitle: string };\n} = {\n  runs: { name: 'runs', tooltipTitle: 'Runs Explorer' },\n  images: { name: 'images', tooltipTitle: 'Images Explorer' },\n  params: { name: 'params', tooltipTitle: 'Params Explorer' },\n  metrics: { name: 'metrics', tooltipTitle: 'Metrics Explorer' },\n  scatters: { name: 'scatterplot', tooltipTitle: 'Scatters Explorer' },\n};\n\nfunction BookmarkCard({\n  name,\n  id,\n  app_id,\n  description,\n  onBookmarkDelete,\n  select,\n  type,\n}: IBookmarkCardProps): React.FunctionComponentElement<React.ReactNode> {\n  const [openModal, setOpenModal] = React.useState<boolean>(false);\n\n  function handleOpenModal(): void {\n    setOpenModal(true);\n  }\n  function handleCloseModal(): void {\n    setOpenModal(false);\n  }\n\n  function handleBookmarkDelete(): void {\n    onBookmarkDelete(id);\n  }\n\n  const tags: { label: string }[] = React.useMemo(() => {\n    return select?.options?.map((val: any) => ({ label: val.label })) || [];\n  }, [select]);\n\n  return (\n    <ErrorBoundary>\n      <div className='BookmarkCard'>\n        <div className='BookmarkCard__top'>\n          <div className='BookmarkCard__titleBox__section'>\n            <div className='BookmarkCard__titleBox__section__container'>\n              <Tooltip\n                title={BookmarkIconType[type].tooltipTitle}\n                placement='top'\n              >\n                <div className='BookmarkCard__titleBox__section__container__iconBox'>\n                  <Icon name={BookmarkIconType[type].name} fontSize={16} />\n                </div>\n              </Tooltip>\n\n              <Text\n                size={18}\n                weight={600}\n                component='h3'\n                tint={100}\n                className='BookmarkCard__titleBox__section__container__title'\n              >\n                {name}\n              </Text>\n            </div>\n\n            <div className='BookmarkCard__actionButtonsBox'>\n              <NavLink to={`/${type}/${app_id}`}>\n                <Button\n                  variant='outlined'\n                  onClick={() =>\n                    analytics.trackEvent(ANALYTICS_EVENT_KEYS.bookmarks.view)\n                  }\n                >\n                  View Bookmark\n                </Button>\n              </NavLink>\n              <span className='BookmarkCard__delete'>\n                <Button\n                  color='secondary'\n                  withOnlyIcon\n                  onClick={handleOpenModal}\n                >\n                  <Icon name='delete' />\n                </Button>\n              </span>\n            </div>\n          </div>\n          <Text\n            size={12}\n            weight={400}\n            tint={100}\n            component='p'\n            className='BookmarkCard__description'\n          >\n            {description}\n          </Text>\n        </div>\n        {tags.length && !select.advancedMode ? (\n          <div className='BookmarkCard__selected__metrics ScrollBar__hidden'>\n            {tags.map((tag, index) => {\n              return (\n                <Badge\n                  size='large'\n                  key={`${tag.label}-${index}`}\n                  label={tag.label}\n                />\n              );\n            })}\n          </div>\n        ) : null}\n        {(!select.advancedMode && select.query) ||\n        (select.advancedMode && select.advancedQuery) ? (\n          <div className='BookmarkCard__bottom'>\n            <div className='BookmarkCard__run__expression'>\n              <CodeBlock\n                code={select.advancedMode ? select.advancedQuery : select.query}\n              />\n            </div>\n          </div>\n        ) : null}\n        <ConfirmModal\n          open={openModal}\n          onCancel={handleCloseModal}\n          onSubmit={handleBookmarkDelete}\n          text='Are you sure you want to delete this bookmark?'\n          icon={<Icon name='delete' />}\n          title='Delete bookmark'\n          statusType='error'\n          confirmBtnText='Delete'\n        />\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default BookmarkCard;\n"],"sourceRoot":""}