Metadata-Version: 2.1
Name: junkaptor
Version: 0.0.5
Summary: Module package for sanitizing data
Home-page: https://code.stroeder.com/pymod/python-junkaptor
Download-URL: https://pypi.python.org/pypi/junkaptor/
Author: Michael Stroeder
Author-email: michael@stroeder.com
Maintainer: Michael Stroeder
Maintainer-email: michael@stroeder.com
License: Apache-2.0
Project-URL: Code, https://code.stroeder.com/pymod/python-junkaptor
Project-URL: Issue tracker, https://code.stroeder.com/pymod/python-junkaptor/issues
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE

# junkaptor - Python module for sanitizing data

-- Garbage in, sanitized data out...  --

This module package allows to sanitize data records provided as key-values
dictionaries, allowing attribute mapping etc.

Mainly this is used in meta-directory connectors.

# Dependencies

Only Python 3.6+ and its standard library.

# Installation

## From PyPI

```
pip install junkaptor
```

## Debian package

You can build a Debian package by using setuptools helper
[stdeb](https://github.com/astraw/stdeb). A custom configuration
file _stdeb.cfg_ is provided.

See repo
[container-stdeb](https://code.stroeder.com/pymod/container-stdeb)
for easy containerized builds.

# Configuration parameters

The following configuration paramaters can be optionally provided to
configure some transformation steps applied in same the order the
parameters are described herein:

## decompose_attrs

## recode_attrs

## remove_values

## replace_values

## sanitizer

## rename_attrs

## fallback_attrs

## fixed_attrs

## remove_attrs

## compose_attrs

## single_val_attrs

## name_suffix

