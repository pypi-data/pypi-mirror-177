Metadata-Version: 2.1
Name: neutrino-torch
Version: 1.3.3
Summary: Torch backend for Deeplite Neutrino engine.
Home-page: https://www.deeplite.ai
Author: Deeplite
Author-email: support@deeplite.ai
License: Proprietary
Keywords: optimizer deep_neural_network deep_learning neural_architecture_search torch
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Operating System :: POSIX :: Linux
Classifier: Natural Language :: English
Classifier: License :: Other/Proprietary License
Classifier: Environment :: Console
Description-Content-Type: text/markdown
Requires-Dist: neutrino-engine (>=5.3.0)
Requires-Dist: torch (<=1.8.1,>=1.4)
Requires-Dist: deeplite-profiler[torch]
Requires-Dist: deeplite-model-converter[torch]
Requires-Dist: Augmentor (==0.2.8)

<p align="center">
  <img src="https://docs.deeplite.ai/neutrino/_static/content/deeplite-logo-color.png" />
</p>

[![Build Status](https://travis-ci.com/Deeplite/neutrino-torch.svg?token=kodd5rKMpjxQDqRCxwiV&branch=master)](https://travis-ci.com/Deeplite/neutrino-torch)
[![codecov](https://codecov.io/gh/Deeplite/neutrino-torch/branch/master/graph/badge.svg?token=I7AE3NN5UJ)](https://codecov.io/gh/Deeplite/neutrino-torch)

# Neutrino Torch

Neutrino is a deep learning library for optimizing and accelerating deep neural networks to make them faster, smaller and more energy-efficient. Neural network designers can specify a variety of pre-trained models, datasets and target computation constraints and ask the engine to optimize the network. High-level APIs are provided to make the optimization process easy and transparent to the user. Neutrino can be biased to concentrate on compression (relative to disk size taken by the model) or latency (forward call’s execution time) optimization.

<p align="center">
  <img src="https://docs.deeplite.ai/neutrino/_images/engine_figure.png" />
</p>

# Community Release

Our community edition provides all the important features to experience the power and usability of model optimization with Neutrino. With the community version, engineers and researchers can verify the seamless integration of Neutrino into standard AI processes, test compatibility with existing model development and explore the benefits of optimization to various products. Feel `free` to use it as you please! The aim of the community edition is multifold, with examples such as:

- Provide hands-on experience with automated model architecture optimization and see first-hand the possibilities with ``Deeplite Neutrino``
- Compare and complement the results obtained using ``Deeplite Neutrino`` with other open-source and industry model architecture optimization frameworks
- Export an optimized model to test integration with endpoint applications
- Verify the integration of ``Deeplite Neutrino`` within industry and production pipelines
- Utilize ``Deeplite Neutrino`` to accelerate academic research, expedite results and share your achievements in research papers
- Have fun! Users can play around with ``Deeplite Neutrino`` and enjoy the advantages of model architecture optimization in various use-cases 

For detailed comparison of features on our community and production editions, refer to the [documentation](https://docs.deeplite.ai/neutrino/features.html)

# Get Your Free Community License

The community license key is completely free-to-obtain and free-to-use. [Fill out this simple form](<https://info.deeplite.ai/community>) to obtain the license key for the Community Version of Deeplite Neutrino™.

# Installation

Use ``pip`` to install `neutrino-engine` and `neutrino-torch` from PyPi repository. We recommend creating a new python virtualenv, then pip install using the following commands.

```{.python}
    pip install --upgrade pip
    pip install neutrino-engine
    pip install neutrino-torch
```

For other methods of installation and detailed instructions, refer to the [documentation](https://docs.deeplite.ai/neutrino/install.html)




