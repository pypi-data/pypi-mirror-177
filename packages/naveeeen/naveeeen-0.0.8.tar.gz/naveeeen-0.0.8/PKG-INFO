Metadata-Version: 2.1
Name: naveeeen
Version: 0.0.8
Summary: See the difference, with/out naveeeen.
Project-URL: Homepage, https://github.com/navpypi/naveeeen-pypi
Project-URL: Bug Tracker, https://github.com/navpypi/naveeeen-pypi
Author-email: naveen v <navpypi@gmail.com>
License-File: LICENCE
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.5
Description-Content-Type: text/markdown

# naveeeen Package - This is a simple package, you can see the difference when using naveeeen and without.

This is a simple package, you can see the difference when using naveeeen and without.

> ***It's 4 e's.***

This saves your time when dealing with many files.

* What happen if you don't use naveeeen, see the difference

  pass your method name(without())), iterable, false to e()

  *syntax: naveeeen.e(func_name,list,False)*
* What happen if you use naveeeen, see the difference

  pass your method name, iterable, True to e()

  *syntax: naveeeen.e(func_name,list,True)*

  Always the third argument is True.
* See the difference in result of using 'both' - output will the time taken to run a normal program and time taken to run  a normal program with naveeeen.
  syntax: *naveeeen.e(func_name,list,'both')* or *naveeeen.e(func_name,list,whizz='both')*

Try running the below code to see the difference:

from naveeeen import naveeeen

import os

def main_fun(s=[]):#v8

    with open(f'{s}.txt','w+'):pass

    if os.path.exists(f'{s}.txt'):

    os.remove(f'{s}.txt')

    print(s, end=',')

nums=[i for i in range(100)] #try 1000 10000 100000 1M

print(naveeeen.e(main_fun,nums,'both'))
