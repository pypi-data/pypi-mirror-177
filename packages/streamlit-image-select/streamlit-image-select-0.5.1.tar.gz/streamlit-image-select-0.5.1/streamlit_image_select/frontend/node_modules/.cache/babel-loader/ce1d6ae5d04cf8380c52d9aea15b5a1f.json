{"ast":null,"code":"import{Streamlit}from\"streamlit-component-lib\";var labelDiv=document.body.appendChild(document.createElement(\"label\"));var label=labelDiv.appendChild(document.createTextNode(\"\"));var imagesDiv=document.body.appendChild(document.createElement(\"div\"));imagesDiv.classList.add(\"image-picker\");/**\n * The component's render function. This will be called immediately after\n * the component is initially loaded, and then again every time the\n * component gets new data from Python.\n */function onRender(event){// Get the RenderData from the event\nvar data=event.detail;if(data.theme){labelDiv.style.font=data.theme.font;labelDiv.style.color=data.theme.textColor;if(data.theme.base===\"dark\"){document.body.querySelectorAll(\".box, .caption\").forEach(function(el){el.classList.add(\"dark\");});}else{document.body.querySelectorAll(\".box, .caption\").forEach(function(el){el.classList.remove(\"dark\");});}// TODO: Gray out the component if it's disabled. \n}label.textContent=data.args[\"label\"];var images=data.args[\"images\"];var captions=data.args[\"captions\"];// console.log(captions)\nif(imagesDiv.childNodes.length===0){images.forEach(function(image,i){var container=imagesDiv.appendChild(document.createElement(\"div\"));var box=container.appendChild(document.createElement(\"div\"));box.classList.add(\"box\");var img=box.appendChild(document.createElement(\"img\"));img.classList.add(\"image\");img.src=image;if(captions){var desc=container.appendChild(document.createElement(\"div\"));desc.classList.add(\"caption\");desc.textContent=captions[i];}// TODO: Change this to use `default` instead of just 0.\nif(i===0){box.classList.add(\"selected\");img.classList.add(\"selected\");}img.onclick=function(){imagesDiv.querySelectorAll(\".selected\").forEach(function(el){el.classList.remove(\"selected\");});Streamlit.setComponentValue(i);box.classList.add(\"selected\");img.classList.add(\"selected\");};});}// We tell Streamlit to update our frameHeight after each render event, in\n// case it has changed. (This isn't strictly necessary for the example\n// because our height stays fixed, but this is a low-cost function, so\n// there's no harm in doing it redundantly.)\nStreamlit.setFrameHeight();}// Attach our `onRender` handler to Streamlit's render event.\nStreamlit.events.addEventListener(Streamlit.RENDER_EVENT,onRender);// Tell Streamlit we're ready to start receiving data. We won't get our\n// first RENDER_EVENT until we call this function.\nStreamlit.setComponentReady();// Finally, tell Streamlit to update our initial height. We omit the\n// `height` parameter here to have it default to our scrollHeight.\nStreamlit.setFrameHeight();","map":{"version":3,"names":["Streamlit","labelDiv","document","body","appendChild","createElement","label","createTextNode","imagesDiv","classList","add","onRender","event","data","detail","theme","style","font","color","textColor","base","querySelectorAll","forEach","el","remove","textContent","args","images","captions","childNodes","length","image","i","container","box","img","src","desc","onclick","setComponentValue","setFrameHeight","events","addEventListener","RENDER_EVENT","setComponentReady"],"sources":["/Users/jrieke/Desktop/streamlit-image-select/streamlit_image_select/frontend/src/index.tsx"],"sourcesContent":["import { Streamlit, RenderData } from \"streamlit-component-lib\"\n\nconst labelDiv = document.body.appendChild(document.createElement(\"label\"))\nconst label = labelDiv.appendChild(document.createTextNode(\"\"))\nconst imagesDiv = document.body.appendChild(document.createElement(\"div\"))\nimagesDiv.classList.add(\"image-picker\")\n\n/**\n * The component's render function. This will be called immediately after\n * the component is initially loaded, and then again every time the\n * component gets new data from Python.\n */\nfunction onRender(event: Event): void {\n  // Get the RenderData from the event\n  const data = (event as CustomEvent<RenderData>).detail\n\n  if (data.theme) {\n    labelDiv.style.font = data.theme.font\n    labelDiv.style.color = data.theme.textColor\n    if (data.theme.base === \"dark\") {\n      document.body.querySelectorAll(\".box, .caption\").forEach((el) => {\n        el.classList.add(\"dark\")\n      })\n    } else {\n      document.body.querySelectorAll(\".box, .caption\").forEach((el) => {\n        el.classList.remove(\"dark\")\n      })\n    }\n\n    // TODO: Gray out the component if it's disabled. \n  }\n\n  label.textContent = data.args[\"label\"]\n  let images = data.args[\"images\"]\n  let captions = data.args[\"captions\"]\n  // console.log(captions)\n\n  if (imagesDiv.childNodes.length === 0) {\n    images.forEach((image: string, i: number) => {\n      let container = imagesDiv.appendChild(document.createElement(\"div\"))\n\n      let box = container.appendChild(document.createElement(\"div\"))\n      box.classList.add(\"box\")\n\n      let img = box.appendChild(document.createElement(\"img\"))\n      img.classList.add(\"image\")\n      img.src = image\n\n      if (captions) {\n        let desc = container.appendChild(document.createElement(\"div\"))\n        desc.classList.add(\"caption\")\n        desc.textContent = captions[i]\n      }\n\n      // TODO: Change this to use `default` instead of just 0.\n      if (i === 0) {\n        box.classList.add(\"selected\")\n        img.classList.add(\"selected\")\n      }\n\n      img.onclick = function () {\n        imagesDiv.querySelectorAll(\".selected\").forEach((el) => {\n          el.classList.remove(\"selected\")\n        })\n        Streamlit.setComponentValue(i)\n        box.classList.add(\"selected\")\n        img.classList.add(\"selected\")\n      }\n    })\n  }\n\n  // We tell Streamlit to update our frameHeight after each render event, in\n  // case it has changed. (This isn't strictly necessary for the example\n  // because our height stays fixed, but this is a low-cost function, so\n  // there's no harm in doing it redundantly.)\n  Streamlit.setFrameHeight()\n}\n\n// Attach our `onRender` handler to Streamlit's render event.\nStreamlit.events.addEventListener(Streamlit.RENDER_EVENT, onRender)\n\n// Tell Streamlit we're ready to start receiving data. We won't get our\n// first RENDER_EVENT until we call this function.\nStreamlit.setComponentReady()\n\n// Finally, tell Streamlit to update our initial height. We omit the\n// `height` parameter here to have it default to our scrollHeight.\nStreamlit.setFrameHeight()\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}