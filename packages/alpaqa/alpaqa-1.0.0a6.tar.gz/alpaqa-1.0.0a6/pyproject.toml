[project]
name = "alpaqa"
readme = "python/README.rst"
requires-python = ">=3.7"
license = { "file" = "LICENSE" }
authors = [{ "name" = "Pieter P", "email" = "pieter.p.dev@outlook.com" }]
keywords = ["optimization", "panoc", "alm", "mpc"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
]
dependencies = ["numpy", "casadi"]
dynamic = ["version", "description"]

[project.optional-dependencies]
docs = [
    "sphinx~=5.1",
    "matplotlib",
    "breathe",
    "furo",
]

[project.urls]
"Documentation" = "https://kul-optec.github.io/alpaqa"
"Source" = "https://github.com/kul-optec/alpaqa"
"Bug Tracker" = "https://github.com/kul-optec/alpaqa/issues"

[project.scripts]
alpaqa = "alpaqa.__main__:main"

[build-system]
requires = ["py-build-cmake~=0.0.16a2", "pybind11", "pybind11-stubgen"]
build-backend = "py_build_cmake.build"

[tool.py-build-cmake.module]
name = "alpaqa"
directory = "python"

[tool.py-build-cmake.sdist]
include = ["README.md", "CMakeLists.txt", "src", "cmake", "interfaces"]
exclude = []

[tool.py-build-cmake.cmake]
minimum_version = "3.21"
source_path = "."
config = []
args = ["-Wdev"]
build_args = ["-j"]
install_components = ["python_modules", "python_stubs"]
[tool.py-build-cmake.cmake.options]
"ALPAQA_WITH_PYTHON:BOOL" = "On"
"ALPAQA_WITH_PY_STUBS:BOOL" = "On"
"ALPAQA_WITH_TESTS:BOOL" = "Off"
"ALPAQA_WITH_EXAMPLES:BOOL" = "Off"
"ALPAQA_WITH_QUAD_PRECISION:BOOL" = "Off"
"ALPAQA_WITH_UBSAN_DEBUG:BOOL" = "Off"
"ALPAQA_WITH_ASAN_DEBUG:BOOL" = "Off"
"ALPAQA_INCLUDE_DEBUG_INFO:BOOL" = "Off"

[tool.py-build-cmake.linux.cmake]
config = ["Debug", "Release"]
generator = "Ninja Multi-Config"
[tool.py-build-cmake.mac.cmake]
config = ["Debug", "Release"]
generator = "Ninja Multi-Config"
[tool.py-build-cmake.windows.cmake]
config = ["Release"]

[tool.py-build-cmake.stubgen]
args = ["-v"]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["python/test"]

[tool.mypy]
plugins = ["numpy.typing.mypy_plugin"]

[tool.pyright]
# Pyright stops looking after the first match, which is usually in the 
# site-packages folder. When doing an editable install, it should look in both
# site-packages and the source folder. To get the search order correct, 
# explicitly point it to the source folder first (it will still look for the C++ 
# extension module stubs in site-packages).
extraPaths = ["python"]
