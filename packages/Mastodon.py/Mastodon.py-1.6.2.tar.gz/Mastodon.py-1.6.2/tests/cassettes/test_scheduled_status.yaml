interactions:
- request:
    body: status=please+ensure+adequate+headroom&scheduled_at=4000-01-01T14%3A33%3A14%2B00%3A00
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Authorization:
      - Bearer __MASTODON_PY_TEST_ACCESS_TOKEN
      Connection:
      - keep-alive
      Content-Length:
      - '85'
      Content-Type:
      - application/x-www-form-urlencoded
      User-Agent:
      - tests/v311
    method: POST
    uri: http://localhost:3000/api/v1/statuses
  response:
    body:
      string: '{"id":"9","scheduled_at":"4000-01-01T14:33:14.000Z","params":{"text":"please
        ensure adequate headroom","media_ids":null,"sensitive":null,"spoiler_text":null,"visibility":null,"language":null,"scheduled_at":null,"poll":null,"idempotency":null,"with_rate_limit":false,"in_reply_to_id":null,"application_id":1234567890123456},"media_attachments":[]}'
    headers:
      Cache-Control:
      - no-store
      Content-Security-Policy:
      - 'base-uri ''none''; default-src ''none''; frame-ancestors ''none''; font-src
        ''self'' http://localhost:3000; img-src ''self'' https: data: blob: http://localhost:3000;
        style-src ''self'' http://localhost:3000 ''nonce-mI+p1n1hlWRvV9yfZhLVkg=='';
        media-src ''self'' https: data: http://localhost:3000; frame-src ''self''
        https:; manifest-src ''self'' http://localhost:3000; connect-src ''self''
        data: blob: http://localhost:3000 http://localhost:3000 ws://localhost:4000
        ws://localhost:3035 http://localhost:3035; script-src ''self'' ''unsafe-inline''
        ''unsafe-eval'' http://localhost:3000; child-src ''self'' blob: http://localhost:3000;
        worker-src ''self'' blob: http://localhost:3000'
      Content-Type:
      - application/json; charset=utf-8
      ETag:
      - W/"df9312576ee1d523a31bb8070a7dea99"
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept, Origin
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-RateLimit-Limit:
      - '300'
      X-RateLimit-Remaining:
      - '294'
      X-RateLimit-Reset:
      - '2022-11-18T00:00:00.255658Z'
      X-Request-Id:
      - fa02dfcd-18c5-46fe-bd48-54be11183d28
      X-Runtime:
      - '0.017511'
      X-XSS-Protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: scheduled_at=4000-01-01T14%3A23%3A14%2B00%3A00
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Authorization:
      - Bearer __MASTODON_PY_TEST_ACCESS_TOKEN
      Connection:
      - keep-alive
      Content-Length:
      - '46'
      Content-Type:
      - application/x-www-form-urlencoded
      User-Agent:
      - tests/v311
    method: PUT
    uri: http://localhost:3000/api/v1/scheduled_statuses/9
  response:
    body:
      string: '{"id":"9","scheduled_at":"4000-01-01T14:23:14.000Z","params":{"poll":null,"text":"please
        ensure adequate headroom","language":null,"media_ids":null,"sensitive":null,"visibility":null,"idempotency":null,"scheduled_at":null,"spoiler_text":null,"application_id":1234567890123456,"in_reply_to_id":null,"with_rate_limit":false},"media_attachments":[]}'
    headers:
      Cache-Control:
      - no-store
      Content-Security-Policy:
      - 'base-uri ''none''; default-src ''none''; frame-ancestors ''none''; font-src
        ''self'' http://localhost:3000; img-src ''self'' https: data: blob: http://localhost:3000;
        style-src ''self'' http://localhost:3000 ''nonce-j2eVQtsSGbNcoL6aoVEiag=='';
        media-src ''self'' https: data: http://localhost:3000; frame-src ''self''
        https:; manifest-src ''self'' http://localhost:3000; connect-src ''self''
        data: blob: http://localhost:3000 http://localhost:3000 ws://localhost:4000
        ws://localhost:3035 http://localhost:3035; script-src ''self'' ''unsafe-inline''
        ''unsafe-eval'' http://localhost:3000; child-src ''self'' blob: http://localhost:3000;
        worker-src ''self'' blob: http://localhost:3000'
      Content-Type:
      - application/json; charset=utf-8
      ETag:
      - W/"812dc33d12d6657b6cf985c177f39d2a"
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept, Origin
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Request-Id:
      - 4ea9551a-906c-483a-845e-e0f3ed9d8ac0
      X-Runtime:
      - '0.012714'
      X-XSS-Protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Authorization:
      - Bearer __MASTODON_PY_TEST_ACCESS_TOKEN
      Connection:
      - keep-alive
      User-Agent:
      - tests/v311
    method: GET
    uri: http://localhost:3000/api/v1/scheduled_statuses
  response:
    body:
      string: '[{"id":"9","scheduled_at":"4000-01-01T14:23:14.000Z","params":{"poll":null,"text":"please
        ensure adequate headroom","language":null,"media_ids":null,"sensitive":null,"visibility":null,"idempotency":null,"scheduled_at":null,"spoiler_text":null,"application_id":1234567890123456,"in_reply_to_id":null,"with_rate_limit":false},"media_attachments":[]}]'
    headers:
      Cache-Control:
      - no-store
      Content-Security-Policy:
      - 'base-uri ''none''; default-src ''none''; frame-ancestors ''none''; font-src
        ''self'' http://localhost:3000; img-src ''self'' https: data: blob: http://localhost:3000;
        style-src ''self'' http://localhost:3000 ''nonce-augTaTyLah4EtSJxDGKS2Q=='';
        media-src ''self'' https: data: http://localhost:3000; frame-src ''self''
        https:; manifest-src ''self'' http://localhost:3000; connect-src ''self''
        data: blob: http://localhost:3000 http://localhost:3000 ws://localhost:4000
        ws://localhost:3035 http://localhost:3035; script-src ''self'' ''unsafe-inline''
        ''unsafe-eval'' http://localhost:3000; child-src ''self'' blob: http://localhost:3000;
        worker-src ''self'' blob: http://localhost:3000'
      Content-Type:
      - application/json; charset=utf-8
      ETag:
      - W/"a13ea511f7c3cc717d6f994632d73e88"
      Link:
      - <http://localhost:3000/api/v1/scheduled_statuses?min_id=9>; rel="prev"
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept, Origin
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Request-Id:
      - 60917645-b2f3-402c-b4fe-32a8aa625ebb
      X-Runtime:
      - '0.007773'
      X-XSS-Protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Authorization:
      - Bearer __MASTODON_PY_TEST_ACCESS_TOKEN
      Connection:
      - keep-alive
      User-Agent:
      - tests/v311
    method: GET
    uri: http://localhost:3000/api/v1/scheduled_statuses/9
  response:
    body:
      string: '{"id":"9","scheduled_at":"4000-01-01T14:23:14.000Z","params":{"poll":null,"text":"please
        ensure adequate headroom","language":null,"media_ids":null,"sensitive":null,"visibility":null,"idempotency":null,"scheduled_at":null,"spoiler_text":null,"application_id":1234567890123456,"in_reply_to_id":null,"with_rate_limit":false},"media_attachments":[]}'
    headers:
      Cache-Control:
      - no-store
      Content-Security-Policy:
      - 'base-uri ''none''; default-src ''none''; frame-ancestors ''none''; font-src
        ''self'' http://localhost:3000; img-src ''self'' https: data: blob: http://localhost:3000;
        style-src ''self'' http://localhost:3000 ''nonce-ZMti6eUsNggtrYI0vZMLRg=='';
        media-src ''self'' https: data: http://localhost:3000; frame-src ''self''
        https:; manifest-src ''self'' http://localhost:3000; connect-src ''self''
        data: blob: http://localhost:3000 http://localhost:3000 ws://localhost:4000
        ws://localhost:3035 http://localhost:3035; script-src ''self'' ''unsafe-inline''
        ''unsafe-eval'' http://localhost:3000; child-src ''self'' blob: http://localhost:3000;
        worker-src ''self'' blob: http://localhost:3000'
      Content-Type:
      - application/json; charset=utf-8
      ETag:
      - W/"812dc33d12d6657b6cf985c177f39d2a"
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept, Origin
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Request-Id:
      - bc1d183e-3f0c-4884-bace-4383fdf83843
      X-Runtime:
      - '0.007630'
      X-XSS-Protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Authorization:
      - Bearer __MASTODON_PY_TEST_ACCESS_TOKEN
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - tests/v311
    method: DELETE
    uri: http://localhost:3000/api/v1/scheduled_statuses/9
  response:
    body:
      string: '{}'
    headers:
      Cache-Control:
      - no-store
      Content-Security-Policy:
      - 'base-uri ''none''; default-src ''none''; frame-ancestors ''none''; font-src
        ''self'' http://localhost:3000; img-src ''self'' https: data: blob: http://localhost:3000;
        style-src ''self'' http://localhost:3000 ''nonce-2j6knk07w6b9MguUxpFt9w=='';
        media-src ''self'' https: data: http://localhost:3000; frame-src ''self''
        https:; manifest-src ''self'' http://localhost:3000; connect-src ''self''
        data: blob: http://localhost:3000 http://localhost:3000 ws://localhost:4000
        ws://localhost:3035 http://localhost:3035; script-src ''self'' ''unsafe-inline''
        ''unsafe-eval'' http://localhost:3000; child-src ''self'' blob: http://localhost:3000;
        worker-src ''self'' blob: http://localhost:3000'
      Content-Type:
      - application/json; charset=utf-8
      ETag:
      - W/"44136fa355b3678a1146ad16f7e8649e"
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept, Origin
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Request-Id:
      - d07e6544-42a1-479b-98f3-cddadb05122e
      X-Runtime:
      - '0.010246'
      X-XSS-Protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Authorization:
      - Bearer __MASTODON_PY_TEST_ACCESS_TOKEN
      Connection:
      - keep-alive
      User-Agent:
      - tests/v311
    method: GET
    uri: http://localhost:3000/api/v1/scheduled_statuses
  response:
    body:
      string: '[]'
    headers:
      Cache-Control:
      - no-store
      Content-Security-Policy:
      - 'base-uri ''none''; default-src ''none''; frame-ancestors ''none''; font-src
        ''self'' http://localhost:3000; img-src ''self'' https: data: blob: http://localhost:3000;
        style-src ''self'' http://localhost:3000 ''nonce-SFhpwFFzcWA9fLPDtBRYrA=='';
        media-src ''self'' https: data: http://localhost:3000; frame-src ''self''
        https:; manifest-src ''self'' http://localhost:3000; connect-src ''self''
        data: blob: http://localhost:3000 http://localhost:3000 ws://localhost:4000
        ws://localhost:3035 http://localhost:3035; script-src ''self'' ''unsafe-inline''
        ''unsafe-eval'' http://localhost:3000; child-src ''self'' blob: http://localhost:3000;
        worker-src ''self'' blob: http://localhost:3000'
      Content-Type:
      - application/json; charset=utf-8
      ETag:
      - W/"4f53cda18c2baa0c0354bb5f9a3ecbe5"
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept, Origin
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Request-Id:
      - 650593a5-0f7f-45d9-9a3c-e94ed9a31622
      X-Runtime:
      - '0.006801'
      X-XSS-Protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: status=please+ensure+adequate+headroom&scheduled_at=2022-11-17T22%3A18%3A00%2B00%3A00
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Authorization:
      - Bearer __MASTODON_PY_TEST_ACCESS_TOKEN
      Connection:
      - keep-alive
      Content-Length:
      - '85'
      Content-Type:
      - application/x-www-form-urlencoded
      User-Agent:
      - tests/v311
    method: POST
    uri: http://localhost:3000/api/v1/statuses
  response:
    body:
      string: '{"id":"109361461679492770","created_at":"2022-11-17T22:17:55.335Z","in_reply_to_id":null,"in_reply_to_account_id":null,"sensitive":false,"spoiler_text":"","visibility":"public","language":"ja","uri":"http://localhost:3000/users/mastodonpy_test/statuses/109361461679492770","url":"http://localhost:3000/@mastodonpy_test/109361461679492770","replies_count":0,"reblogs_count":0,"favourites_count":0,"edited_at":null,"favourited":false,"reblogged":false,"muted":false,"bookmarked":false,"pinned":false,"content":"\u003cp\u003eplease
        ensure adequate headroom\u003c/p\u003e","filtered":[],"reblog":null,"application":{"name":"Mastodon.py
        test suite","website":null},"account":{"id":"109337440686176140","username":"mastodonpy_test","acct":"mastodonpy_test","display_name":"John
        Lennon","locked":true,"bot":false,"discoverable":null,"group":false,"created_at":"2022-11-13T00:00:00.000Z","note":"\u003cp\u003eI
        walk funny\u003c/p\u003e","url":"http://localhost:3000/@mastodonpy_test","avatar":"http://localhost:3000/system/accounts/avatars/109/337/440/686/176/140/original/d6cd9a5a5e65da30.jpg","avatar_static":"http://localhost:3000/system/accounts/avatars/109/337/440/686/176/140/original/d6cd9a5a5e65da30.jpg","header":"http://localhost:3000/system/accounts/headers/109/337/440/686/176/140/original/2b7760a42692fbde.jpg","header_static":"http://localhost:3000/system/accounts/headers/109/337/440/686/176/140/original/2b7760a42692fbde.jpg","followers_count":0,"following_count":0,"statuses_count":7,"last_status_at":"2022-11-17","noindex":false,"emojis":[],"fields":[{"name":"bread","value":"toasty.","verified_at":null},{"name":"lasagna","value":"no!!!","verified_at":null}]},"media_attachments":[],"mentions":[],"tags":[],"emojis":[],"card":null,"poll":null}'
    headers:
      Cache-Control:
      - no-store
      Content-Security-Policy:
      - 'base-uri ''none''; default-src ''none''; frame-ancestors ''none''; font-src
        ''self'' http://localhost:3000; img-src ''self'' https: data: blob: http://localhost:3000;
        style-src ''self'' http://localhost:3000 ''nonce-g0xyYi8hSYTV7gTXyr7jLA=='';
        media-src ''self'' https: data: http://localhost:3000; frame-src ''self''
        https:; manifest-src ''self'' http://localhost:3000; connect-src ''self''
        data: blob: http://localhost:3000 http://localhost:3000 ws://localhost:4000
        ws://localhost:3035 http://localhost:3035; script-src ''self'' ''unsafe-inline''
        ''unsafe-eval'' http://localhost:3000; child-src ''self'' blob: http://localhost:3000;
        worker-src ''self'' blob: http://localhost:3000'
      Content-Type:
      - application/json; charset=utf-8
      ETag:
      - W/"e147cc54de07c0284263b0fc95f4e1b6"
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept, Origin
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-RateLimit-Limit:
      - '300'
      X-RateLimit-Remaining:
      - '293'
      X-RateLimit-Reset:
      - '2022-11-18T00:00:00.355035Z'
      X-Request-Id:
      - 15ee4c66-8ed9-475b-aae7-61d8f77c119e
      X-Runtime:
      - '0.031334'
      X-XSS-Protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Authorization:
      - Bearer __MASTODON_PY_TEST_ACCESS_TOKEN
      Connection:
      - keep-alive
      User-Agent:
      - tests/v311
    method: GET
    uri: http://localhost:3000/api/v1/timelines/home
  response:
    body:
      string: '[{"id":"109361461679492770","created_at":"2022-11-17T22:17:55.335Z","in_reply_to_id":null,"in_reply_to_account_id":null,"sensitive":false,"spoiler_text":"","visibility":"public","language":"ja","uri":"http://localhost:3000/users/mastodonpy_test/statuses/109361461679492770","url":"http://localhost:3000/@mastodonpy_test/109361461679492770","replies_count":0,"reblogs_count":0,"favourites_count":0,"edited_at":null,"favourited":false,"reblogged":false,"muted":false,"bookmarked":false,"pinned":false,"content":"\u003cp\u003eplease
        ensure adequate headroom\u003c/p\u003e","filtered":[],"reblog":null,"application":{"name":"Mastodon.py
        test suite","website":null},"account":{"id":"109337440686176140","username":"mastodonpy_test","acct":"mastodonpy_test","display_name":"John
        Lennon","locked":true,"bot":false,"discoverable":null,"group":false,"created_at":"2022-11-13T00:00:00.000Z","note":"\u003cp\u003eI
        walk funny\u003c/p\u003e","url":"http://localhost:3000/@mastodonpy_test","avatar":"http://localhost:3000/system/accounts/avatars/109/337/440/686/176/140/original/d6cd9a5a5e65da30.jpg","avatar_static":"http://localhost:3000/system/accounts/avatars/109/337/440/686/176/140/original/d6cd9a5a5e65da30.jpg","header":"http://localhost:3000/system/accounts/headers/109/337/440/686/176/140/original/2b7760a42692fbde.jpg","header_static":"http://localhost:3000/system/accounts/headers/109/337/440/686/176/140/original/2b7760a42692fbde.jpg","followers_count":0,"following_count":0,"statuses_count":7,"last_status_at":"2022-11-17","noindex":false,"emojis":[],"fields":[{"name":"bread","value":"toasty.","verified_at":null},{"name":"lasagna","value":"no!!!","verified_at":null}]},"media_attachments":[],"mentions":[],"tags":[],"emojis":[],"card":null,"poll":null},{"id":"109360911667710470","created_at":"2022-11-17T19:58:02.822Z","in_reply_to_id":null,"in_reply_to_account_id":null,"sensitive":false,"spoiler_text":"","visibility":"public","language":"ja","uri":"http://localhost:3000/users/mastodonpy_test/statuses/109360911667710470","url":"http://localhost:3000/@mastodonpy_test/109360911667710470","replies_count":0,"reblogs_count":0,"favourites_count":0,"edited_at":null,"favourited":false,"reblogged":false,"muted":false,"bookmarked":false,"pinned":false,"content":"\u003cp\u003eplease
        ensure adequate headroom\u003c/p\u003e","filtered":[],"reblog":null,"application":{"name":"Mastodon.py
        test suite","website":null},"account":{"id":"109337440686176140","username":"mastodonpy_test","acct":"mastodonpy_test","display_name":"John
        Lennon","locked":true,"bot":false,"discoverable":null,"group":false,"created_at":"2022-11-13T00:00:00.000Z","note":"\u003cp\u003eI
        walk funny\u003c/p\u003e","url":"http://localhost:3000/@mastodonpy_test","avatar":"http://localhost:3000/system/accounts/avatars/109/337/440/686/176/140/original/d6cd9a5a5e65da30.jpg","avatar_static":"http://localhost:3000/system/accounts/avatars/109/337/440/686/176/140/original/d6cd9a5a5e65da30.jpg","header":"http://localhost:3000/system/accounts/headers/109/337/440/686/176/140/original/2b7760a42692fbde.jpg","header_static":"http://localhost:3000/system/accounts/headers/109/337/440/686/176/140/original/2b7760a42692fbde.jpg","followers_count":0,"following_count":0,"statuses_count":7,"last_status_at":"2022-11-17","noindex":false,"emojis":[],"fields":[{"name":"bread","value":"toasty.","verified_at":null},{"name":"lasagna","value":"no!!!","verified_at":null}]},"media_attachments":[],"mentions":[],"tags":[],"emojis":[],"card":null,"poll":null},{"id":"109360904113799391","created_at":"2022-11-17T19:56:07.558Z","in_reply_to_id":null,"in_reply_to_account_id":null,"sensitive":false,"spoiler_text":"","visibility":"public","language":"ja","uri":"http://localhost:3000/users/mastodonpy_test/statuses/109360904113799391","url":"http://localhost:3000/@mastodonpy_test/109360904113799391","replies_count":0,"reblogs_count":0,"favourites_count":0,"edited_at":null,"favourited":false,"reblogged":false,"muted":false,"bookmarked":false,"pinned":false,"content":"\u003cp\u003eplease
        ensure adequate headroom\u003c/p\u003e","filtered":[],"reblog":null,"application":{"name":"Mastodon.py
        test suite","website":null},"account":{"id":"109337440686176140","username":"mastodonpy_test","acct":"mastodonpy_test","display_name":"John
        Lennon","locked":true,"bot":false,"discoverable":null,"group":false,"created_at":"2022-11-13T00:00:00.000Z","note":"\u003cp\u003eI
        walk funny\u003c/p\u003e","url":"http://localhost:3000/@mastodonpy_test","avatar":"http://localhost:3000/system/accounts/avatars/109/337/440/686/176/140/original/d6cd9a5a5e65da30.jpg","avatar_static":"http://localhost:3000/system/accounts/avatars/109/337/440/686/176/140/original/d6cd9a5a5e65da30.jpg","header":"http://localhost:3000/system/accounts/headers/109/337/440/686/176/140/original/2b7760a42692fbde.jpg","header_static":"http://localhost:3000/system/accounts/headers/109/337/440/686/176/140/original/2b7760a42692fbde.jpg","followers_count":0,"following_count":0,"statuses_count":7,"last_status_at":"2022-11-17","noindex":false,"emojis":[],"fields":[{"name":"bread","value":"toasty.","verified_at":null},{"name":"lasagna","value":"no!!!","verified_at":null}]},"media_attachments":[],"mentions":[],"tags":[],"emojis":[],"card":null,"poll":null},{"id":"109360579914087110","created_at":"2022-11-17T18:33:40.663Z","in_reply_to_id":null,"in_reply_to_account_id":null,"sensitive":false,"spoiler_text":"","visibility":"public","language":"ja","uri":"http://localhost:3000/users/mastodonpy_test/statuses/109360579914087110","url":"http://localhost:3000/@mastodonpy_test/109360579914087110","replies_count":0,"reblogs_count":0,"favourites_count":0,"edited_at":null,"favourited":false,"reblogged":false,"muted":false,"bookmarked":false,"pinned":false,"content":"\u003cp\u003eplease
        ensure adequate headroom\u003c/p\u003e","filtered":[],"reblog":null,"application":{"name":"Mastodon.py
        test suite","website":null},"account":{"id":"109337440686176140","username":"mastodonpy_test","acct":"mastodonpy_test","display_name":"John
        Lennon","locked":true,"bot":false,"discoverable":null,"group":false,"created_at":"2022-11-13T00:00:00.000Z","note":"\u003cp\u003eI
        walk funny\u003c/p\u003e","url":"http://localhost:3000/@mastodonpy_test","avatar":"http://localhost:3000/system/accounts/avatars/109/337/440/686/176/140/original/d6cd9a5a5e65da30.jpg","avatar_static":"http://localhost:3000/system/accounts/avatars/109/337/440/686/176/140/original/d6cd9a5a5e65da30.jpg","header":"http://localhost:3000/system/accounts/headers/109/337/440/686/176/140/original/2b7760a42692fbde.jpg","header_static":"http://localhost:3000/system/accounts/headers/109/337/440/686/176/140/original/2b7760a42692fbde.jpg","followers_count":0,"following_count":0,"statuses_count":7,"last_status_at":"2022-11-17","noindex":false,"emojis":[],"fields":[{"name":"bread","value":"toasty.","verified_at":null},{"name":"lasagna","value":"no!!!","verified_at":null}]},"media_attachments":[],"mentions":[],"tags":[],"emojis":[],"card":null,"poll":null},{"id":"109337450437842705","created_at":"2022-11-13T16:31:32.863Z","in_reply_to_id":null,"in_reply_to_account_id":null,"sensitive":false,"spoiler_text":"","visibility":"public","language":"ja","uri":"http://localhost:3000/users/mastodonpy_test/statuses/109337450437842705","url":"http://localhost:3000/@mastodonpy_test/109337450437842705","replies_count":0,"reblogs_count":0,"favourites_count":0,"edited_at":null,"favourited":false,"reblogged":false,"muted":false,"bookmarked":false,"pinned":false,"content":"\u003cp\u003eit\u0026#39;s
        cool guy\u003c/p\u003e","filtered":[],"reblog":null,"application":{"name":"Mastodon.py
        test suite","website":null},"account":{"id":"109337440686176140","username":"mastodonpy_test","acct":"mastodonpy_test","display_name":"John
        Lennon","locked":true,"bot":false,"discoverable":null,"group":false,"created_at":"2022-11-13T00:00:00.000Z","note":"\u003cp\u003eI
        walk funny\u003c/p\u003e","url":"http://localhost:3000/@mastodonpy_test","avatar":"http://localhost:3000/system/accounts/avatars/109/337/440/686/176/140/original/d6cd9a5a5e65da30.jpg","avatar_static":"http://localhost:3000/system/accounts/avatars/109/337/440/686/176/140/original/d6cd9a5a5e65da30.jpg","header":"http://localhost:3000/system/accounts/headers/109/337/440/686/176/140/original/2b7760a42692fbde.jpg","header_static":"http://localhost:3000/system/accounts/headers/109/337/440/686/176/140/original/2b7760a42692fbde.jpg","followers_count":0,"following_count":0,"statuses_count":7,"last_status_at":"2022-11-17","noindex":false,"emojis":[],"fields":[{"name":"bread","value":"toasty.","verified_at":null},{"name":"lasagna","value":"no!!!","verified_at":null}]},"media_attachments":[],"mentions":[],"tags":[],"emojis":[],"card":null,"poll":null}]'
    headers:
      Cache-Control:
      - no-store
      Content-Security-Policy:
      - 'base-uri ''none''; default-src ''none''; frame-ancestors ''none''; font-src
        ''self'' http://localhost:3000; img-src ''self'' https: data: blob: http://localhost:3000;
        style-src ''self'' http://localhost:3000 ''nonce-nUEebsODmCE7ng8X4Pz5sg=='';
        media-src ''self'' https: data: http://localhost:3000; frame-src ''self''
        https:; manifest-src ''self'' http://localhost:3000; connect-src ''self''
        data: blob: http://localhost:3000 http://localhost:3000 ws://localhost:4000
        ws://localhost:3035 http://localhost:3035; script-src ''self'' ''unsafe-inline''
        ''unsafe-eval'' http://localhost:3000; child-src ''self'' blob: http://localhost:3000;
        worker-src ''self'' blob: http://localhost:3000'
      Content-Type:
      - application/json; charset=utf-8
      ETag:
      - W/"04b7ad9544aeb414f400cc16cb7f663e"
      Link:
      - <http://localhost:3000/api/v1/timelines/home?max_id=109337450437842705>; rel="next",
        <http://localhost:3000/api/v1/timelines/home?min_id=109361461679492770>; rel="prev"
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept, Origin
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Request-Id:
      - 6f1bfa0f-63d7-4f9b-bbe9-a2d626413970
      X-Runtime:
      - '0.037135'
      X-XSS-Protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Authorization:
      - Bearer __MASTODON_PY_TEST_ACCESS_TOKEN
      Connection:
      - keep-alive
      User-Agent:
      - tests/v311
    method: GET
    uri: http://localhost:3000/api/v1/scheduled_statuses
  response:
    body:
      string: '[]'
    headers:
      Cache-Control:
      - no-store
      Content-Security-Policy:
      - 'base-uri ''none''; default-src ''none''; frame-ancestors ''none''; font-src
        ''self'' http://localhost:3000; img-src ''self'' https: data: blob: http://localhost:3000;
        style-src ''self'' http://localhost:3000 ''nonce-EWPfc+xRbq+wOuc8PARDLQ=='';
        media-src ''self'' https: data: http://localhost:3000; frame-src ''self''
        https:; manifest-src ''self'' http://localhost:3000; connect-src ''self''
        data: blob: http://localhost:3000 http://localhost:3000 ws://localhost:4000
        ws://localhost:3035 http://localhost:3035; script-src ''self'' ''unsafe-inline''
        ''unsafe-eval'' http://localhost:3000; child-src ''self'' blob: http://localhost:3000;
        worker-src ''self'' blob: http://localhost:3000'
      Content-Type:
      - application/json; charset=utf-8
      ETag:
      - W/"4f53cda18c2baa0c0354bb5f9a3ecbe5"
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept, Origin
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Request-Id:
      - 794ebf4e-add3-4ba3-965a-b98334fa058f
      X-Runtime:
      - '0.007638'
      X-XSS-Protection:
      - 1; mode=block
    status:
      code: 200
      message: OK
version: 1
