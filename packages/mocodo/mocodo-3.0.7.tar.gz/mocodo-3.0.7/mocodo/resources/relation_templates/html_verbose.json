{
    "extension": "_verbose.html",
    "highlight": "html",
    "transform_attribute": [
        {
            "search": "&",
            "replace": "&amp;"
        },
        {
            "search": ">",
            "replace": "&gt;"
        },
        {
            "search": "<",
            "replace": "&lt;"
        }
    ],
    "transform_relation_name": [
        {
            "search": "&",
            "replace": "&amp;"
        },
        {
            "search": ">",
            "replace": "&gt;"
        },
        {
            "search": "<",
            "replace": "&lt;"
        }
    ],
    "compose_association_attribute": "<span title='association_attribute ({outer_source})' class='normal'>{label}</span><item>Le champ <i>{label}</i> était déjà un simple attribut de l'association <i>{this_relation_name}</i>.</item>",
    "compose_deleted_child_attribute": "<span title='deleted_child_attribute ({outer_source})' class='normal'>{label}</span><item>Le champ <i>{label}</i> a migré à partir de l'entité-fille <i>{adjacent_source}</i> (supprimée).</item>",
    "compose_deleted_child_discriminant_": "<span title='deleted_child_discriminant_ ({outer_source})' class='normal'>{label}</span><item>Un champ entier <i>{label}</i> est ajouté pour indiquer la nature de la spécialisation. Il est interprété comme un code binaire : bit 1 pour la première entité-fille, bit 2 pour la deuxième, etc. Peut être vide, du fait de l'absence de contrainte de totalité.</item>",
    "compose_deleted_child_discriminant_T": "<span title='deleted_child_discriminant_T ({outer_source})' class='normal'>{label}</span><item>Un champ entier <i>{label}</i> est ajouté pour indiquer la nature de la spécialisation. Il est interprété comme un code binaire : bit 1 pour la première entité-fille, bit 2 pour la deuxième, etc. Jamais vide, du fait de la contrainte de totalité.</item>",
    "compose_deleted_child_discriminant_X": "<span title='deleted_child_discriminant_X ({outer_source})' class='normal'>{label}</span><item>Un champ entier <i>{label}</i> est ajouté pour indiquer la nature de la spécialisation : 1 pour la première entité-fille, 2 pour la deuxième, etc. Peut être vide, du fait de l'absence de contrainte de totalité.</item>",
    "compose_deleted_child_discriminant_XT": "<span title='deleted_child_discriminant_XT ({outer_source})' class='normal'>{label}</span><item>Un champ entier <i>{label}</i> est ajouté pour indiquer la nature de la spécialisation : 1 pour la première entité-fille, 2 pour la deuxième, etc. Jamais vide, du fait de la contrainte de totalité.</item>",
    "compose_deleted_child_entity_name": "<span title='deleted_child_entity_name ({outer_source})' class='normal'>{label}</span><item>Un champ booléen <i>{label}</i> est ajouté pour indiquer si on a affaire ou pas à la spécialisation de même nom.</item>",
    "compose_deleted_child_foreign_key": "<span title='deleted_child_foreign_key ({outer_source})' class='foreign'>#{label}</span><item>Le champ <i>{label}</i> est une clé étrangère. Il a migré à partir de l'entité-fille <i>{adjacent_source}</i> (supprimée) dans laquelle il avait déjà migré à partir de l'entité <i>{outer_source}</i>.</item>",
    "compose_deleted_parent_attribute": "<span title='deleted_parent_attribute ({outer_source})' class='normal'>{label}</span><item>Le champ <i>{label}</i> est un simple attribut. Il était simple attribut de l'entité-mère <i>{adjacent_source}</i> (supprimée).</item>",
    "compose_deleted_parent_discriminant_": "<span title='deleted_parent_discriminant_ ({outer_source})' class='normal'>{label}</span><item>Un champ entier <i>{label}</i> est ajouté pour indiquer la nature de la spécialisation. Il est interprété comme un code binaire : bit 1 pour la première entité-fille, bit 2 pour la deuxième, etc. Peut être vide, du fait de l'absence de contrainte de totalité.</item>",
    "compose_deleted_parent_discriminant_T": "<span title='deleted_parent_discriminant_T ({outer_source})' class='normal'>{label}</span><item>Un champ entier <i>{label}</i> est ajouté pour indiquer la nature de la spécialisation. Il est interprété comme un code binaire : bit 1 pour la première entité-fille, bit 2 pour la deuxième, etc. Jamais vide, du fait de la contrainte de totalité.</item>",
    "compose_deleted_parent_discriminant_X": "<span title='deleted_parent_discriminant_X ({outer_source})' class='normal'>{label}</span><item>Un champ entier <i>{label}</i> est ajouté pour indiquer la nature de la spécialisation : 1 pour la première entité-fille, 2 pour la deuxième, etc. Peut être vide, du fait de l'absence de contrainte de totalité.</item>",
    "compose_deleted_parent_discriminant_XT": "<span title='deleted_parent_discriminant_XT ({outer_source})' class='normal'>{label}</span><item>Un champ entier <i>{label}</i> est ajouté pour indiquer la nature de la spécialisation : 1 pour la première entité-fille, 2 pour la deuxième, etc. Jamais vide, du fait de la contrainte de totalité.</item>",
    "compose_deleted_parent_foreign_key": "<span title='deleted_parent_foreign_key ({outer_source})' class='foreign'>#{label}</span><item>Le champ <i>{label}</i> est une clé étrangère. Il a migré à travers l'entité-mère <i>{adjacent_source}</i> (supprimée), et réfère maintenant directement à l'entité <i>{outer_source}</i>.</item>",
    "compose_deleted_parent_primary_key": "<span title='deleted_parent_primary_key ({outer_source})' class='primary'>{label}</span><item>Le champ <i>{label}</i> fait partie de la clé primaire de la table<primary></primary>. Il était clé primaire de l'entité-mère <i>{adjacent_source}</i> (supprimée).</item>",
    "compose_demoted_foreign_key": "<span title='demoted_foreign_key ({outer_source})' class='foreign'>#{label}</span><item>Le champ <i>{label}</i> est une clé étrangère issue de l'entité <i>{outer_source}</i>. Il devrait normalement faire partie de l'identifiant de <i>{this_relation_name}</i>, mais a été rétrogradé explicitement au rang de simple attribut.</item>",
    "compose_foreign_key": "<span title='foreign_key ({outer_source})' class='foreign'>#{label}</span><item>Le champ <i>{label}</i> est une clé étrangère. Il a migré par l'association de dépendance fonctionnelle <i>{association_name}</i> à partir de l'entité <i>{outer_source}</i> en perdant son caractère identifiant.</item>",
    "compose_normal_attribute": "<span title='normal_attribute ({outer_source})' class='normal'>{label}</span><item>Le champ <i>{label}</i> était déjà un simple attribut de l'entité <i>{this_relation_name}</i>.</item>",
    "compose_outer_attribute": "<span title='outer_attribute ({outer_source})' class='normal'>{label}</span><item>Le champ <i>{label}</i> a migré à partir de l'association de dépendance fonctionnelle <i>{association_name}</i>.</item>",
    "compose_parent_primary_key": "<span title='parent_primary_key ({outer_source})' class='foreign primary'>#{label}</span><item>Le champ <i>{label}</i> fait partie de la clé primaire de la table<primary></primary>. C'est une clé étrangère qui a migré à partir de l'entité-mère <i>{outer_source}</i>.</item>",
    "compose_primary_foreign_key": "<span title='primary_foreign_key ({outer_source})' class='foreign primary'>#{label}</span><item>Le champ <i>{label}</i> fait partie de la clé primaire de la table<primary></primary>. C'est une clé étrangère qui a migré directement à partir de l'entité <i>{outer_source}</i>.</item>",
    "compose_primary_key": "<span title='primary_key ({outer_source})' class='primary'>{label}</span><item>Le champ <i>{label}</i> fait partie de la clé primaire de la table<primary></primary>. C'était déjà un identifiant de l'entité <i>{this_relation_name}</i>.</item>",
    "compose_stopped_foreign_key": "<span title='stopped_foreign_key ({outer_source})' class='foreign'>#{label}</span><item>Le champ <i>{label}</i> est une clé étrangère. Il a migré directement de l'entité <i>{outer_source}</i> en perdant son caractère identifiant.</item>",
    "compose_strengthening_primary_key": "<span title='strengthening_primary_key ({outer_source})' class='foreign primary'>#{label}</span><item>Le champ <i>{label}</i> fait partie de la clé primaire de la table<primary></primary>. Il a migré à partir de l'entité <i>{outer_source}</i> pour renforcer l'identifiant.</item>",
    "compose_unsourced_foreign_key": "<span title='unsourced_foreign_key ({outer_source})' class='normal'>{label}</span><item>Le champ <i>{label}</i> a migré par l'association de dépendance fonctionnelle <i>{association_name}</i> à partir de l'entité <i>{adjacent_source}</i> (supprimée). <b>Attention</b> : aucune contrainte d'intégrité référentielle n'est plus assurée.</item>",
    "compose_unsourced_primary_foreign_key": "<span title='unsourced_primary_foreign_key ({outer_source})' class='primary'>{label}</span><item>Le champ <i>{label}</i> fait partie de la clé primaire de la table<primary></primary>. Il a migré par l'association de dépendance fonctionnelle <i>{association_name}</i> à partir de l'entité <i>{adjacent_source}</i> (supprimée). <b>Attention</b> : aucune contrainte d'intégrité référentielle n'est plus assurée.</item>",
    "column_separator": ",\n    ",
    "compose_relation": "<div>\n  <details><summary><span class='relation'>{this_relation_name}</span> (\n    {columns}\n  )</summary>\n</div>",
    "transform_single_column_relation": [
        {
            "search": "(?s)(.+)$",
            "replace": "\\1\n    <li><strong>Avertissement.</strong> Cette table ne comportant qu'un seul champ, on peut envisager de la supprimer.</li>"
        }
    ],
    "transform_forced_relation": [
        {
            "search": "(?s)(.+)$",
            "replace": "\\1\n    <li><strong>Avertissement.</strong> Table résultant de la conversion forcée d'une association DF.</li>"
        }
    ],
    "transform_relation": [
        {
            "search": "(?s)<item>(.+?)</item>(.+)",
            "replace": "\\2\n    <li>\\1</li>",
            "iterated": true
        },
        {
            "search": "(    <li>Le champ )(.+?)( était déjà un simple attribut de .+?.)\n\\1(.+?)\\3",
            "replace": "\\1\\2, \\4\\3",
            "iterated": true
        },
        {
            "search": "    <li>Le champ (.+), (.+?) était déjà un simple attribut( de .+?.)",
            "replace": "    <li>Les champs \\1 et \\2 étaient déjà de simples attributs\\3"
        },
        {
            "search": "(    <li>Le champ )(.+?)( est une clé étrangère\\. Il a migré à partir de l'entité .+? par l'association de dépendance fonctionnelle .+? en perdant son caractère identifiant.)\n\\1(.+?)\\3",
            "replace": "\\1\\2, \\4\\3",
            "iterated": true
        },
        {
            "search": "    <li>Le champ (.+), (.+?) est une clé étrangère\\. Il a (migré à partir de l'entité .+? par l'association de dépendance fonctionnelle .+? en perdant) son (caractère identifiant.)",
            "replace": "    <li>Les champs \\1 et \\2 sont des clés étrangères. Ils ont \\3 leur \\4"
        },
        {
            "search": "(    <li>Le champ )(.+?)( fait partie de la clé primaire de la table<primary></primary>.+?)\n\\1(.+?)\\3",
            "replace": "\\1\\2, \\4\\3",
            "iterated": true
        },
        {
            "search": "    <li>Le champ (.+), (.+?) fait partie de la clé primaire de la table<primary></primary>. C'est une clé étrangère qui a (migré directement à partir de l'entité .+?)",
            "replace": "    <li>Les champs \\1 et \\2 font partie de la clé primaire de la table<primary></primary>. Ce sont des clés étrangères qui ont \\3"
        },
        {
            "search": "    <li>Le champ (.+), (.+?) fait partie de la clé primaire de la table<primary></primary>. C'était déjà un identifiant (de l'entité .+?)",
            "replace": "    <li>Les champs \\1 et \\2 font partie de la clé primaire de la table<primary></primary>. C'était déjà des identifiants \\3"
        },
        {
            "search": "    <li>Le champ (.+), (.+?) fait partie de la clé primaire de la table<primary></primary>. Il a (migré .+?)",
            "replace": "    <li>Les champs \\1 et \\2 font partie de la clé primaire de la table<primary></primary>. Ils ont \\3"
        },
        {
            "search": "$",
            "replace": "<primary_count></primary_count>"
        },
        {
            "search": "(?s)<primary></primary>(.+)</primary_count>",
            "replace": "\\1I</primary_count>",
            "iterated": true
        },
        {
            "search": "(?s)fait partie de( la clé primaire de la table.+)<primary_count>I</primary_count>",
            "replace": "constitue\\1"
        },
        {
            "search": "(?s)font partie de( la clé primaire de la table.+)<primary_count>I</primary_count>",
            "replace": "constituent\\1"
        },
        {
            "search": "<primary_count>I+</primary_count>",
            "replace": ""
        },
        {
            "search": "(?s)</div>(\n    <li>.+)",
            "replace": "  <ul>\\1\n  </ul></details>\n</div>"
        },
        {
            "search": "$",
            "replace": "\n"
        }
    ],
    "compose_relational_schema": "<html>\n<head>\n<meta charset='utf-8'>\n<style>\n  #mld .relation {{ font-variant: small-caps; font-weight: bold }}\n  #mld .primary {{ text-decoration: underline }}\n  #mld .foreign {{ font-style: oblique }}\n  #mld .normal {{ }}\n  #mld strong {{ font-weight: bold }}\n  #mld i {{ font-style: italic }}\n  #mld ul {{ list-style-type:square; margin: 0 0 1em 2em }}\n</style>\n</head>\n<body>\n<div id='mld'>\n{relations}\n</div>\n</body>\n</html>",
    "transform_relational_schema": [
        {
            "search": "\\s+$",
            "replace": ""
        }
    ]
}