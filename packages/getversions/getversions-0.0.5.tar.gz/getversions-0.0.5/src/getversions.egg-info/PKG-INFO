Metadata-Version: 2.1
Name: getversions
Version: 0.0.5
Summary: Get available versions of a package in the repository, and the installed version.
Author-email: Narvin Singh <Narvin.A.Singh@gmail.com>
License:  The MIT License (MIT)
        
        Copyright © 2022 Narvin Singh
        
        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
        
Project-URL: Homepage, https://gitlab.com/narvin/pygetversions
Project-URL: Repository, https://gitlab.com/narvin/pygetversions
Project-URL: Bug Tracker, https://gitlab.com/narvin/pygetversions/-/issues
Keywords: version,semantic version,semver,pypi,pip
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/x-rst
Provides-Extra: code_quality
Provides-Extra: docs
Provides-Extra: test
Provides-Extra: deploy
License-File: LICENSE

getversions
===========

Get the versions of a package available in the repository via pip, and the installed
version.

Installation
------------

.. code-block:: shell

  pip install getversions

Usage
-----

Print Available and Installed Versions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: shell

  python -m getversions.getversions package_name

For instance,

.. code-block:: shell

  python -m getversions.getversions black

would produce output similar to

.. code-block:: shell

  *22.10.0
  22.8.0
  22.6.0
  22.3.0
  22.1.0

where `black 22.10.0` is installed for the current Python interpreter.

Check Installed Version Available in Repository
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If the installed version of the package for the current interpreter is not available
in the repository, the command below will have an exit code of 0, in which case you
might want to upload the installed version to the repository.

.. code-block:: shell

  python -m getversions.newinstalledversion package_name
