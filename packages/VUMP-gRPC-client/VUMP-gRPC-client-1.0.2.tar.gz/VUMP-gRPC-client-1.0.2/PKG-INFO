Metadata-Version: 2.1
Name: VUMP-gRPC-client
Version: 1.0.2
Summary:  a python gRPC client for V2Ray/V2Fly gRPC API
Home-page: https://github.com/V2ray-UMP/VUMP-gRPC-client
Author: V2ray-UMP
Author-email: a@b.c
License: MIT License (MIT)
Project-URL: API Docs Reference, https://www.v2fly.org/config/api.html#apiobject
Project-URL: Discussions, https://github.com/V2ray-UMP/VUMP-gRPC-client/discussions
Project-URL: Issues, https://github.com/V2ray-UMP/VUMP-gRPC-client/issues
Keywords: v2ray grpc python client
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python
Classifier: License :: OSI Approved :: MIT License
Classifier: Development Status :: 3 - Alpha
Requires-Python: >=3.9.0
Description-Content-Type: text/markdown
License-File: LICENSE

* [PyPI](https://pypi.org/project/VUMP-gRPC-client/) 


# VUMP-gRPC-client
This is a python gRPC client for V2Ray/V2Fly gRPC API.


## Installation
```shell
pip install -U VUMP-gRPC-client
```


## Example
```python
from vump_grpc_client import VUMPClient, utils, exceptions

v2ray_client = VUMPClient('1.2.3.4', 1234)
user_id = utils.generate_random_user_id()
user_email = utils.generate_random_email()
inbound_tag = 'inbound-tag'

# Get stats
print(utils.human_readable_bytes(v2ray_client.get_client_download_traffic('user-email@mail.com')))
print(utils.human_readable_bytes(v2ray_client.get_client_upload_traffic('user-email@mail.com')))
print(utils.human_readable_bytes(v2ray_client.get_inbound_download_traffic(inbound_tag)))
print(utils.human_readable_bytes(v2ray_client.get_inbound_upload_traffic(inbound_tag)))
print(utils.human_readable_bytes(v2ray_client.get_total_download_traffic()))
print(utils.human_readable_bytes(v2ray_client.get_total_upload_traffic()))

# Add & Remove client
user = v2ray_client.add_client(inbound_tag, user_id, user_email)
if user:
    print(user)
    v2ray_client.remove_client(inbound_tag, user_email)

# restart logger
v2ray_client.restart_logger()
```
