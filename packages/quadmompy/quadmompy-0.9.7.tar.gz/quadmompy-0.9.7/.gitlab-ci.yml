image: python:3.10.6-slim


# Only trigger pipeline for tagged commits 
# (this should be disabled if unlimited or 
# almost unlimited runners are available)
workflow:
  rules:
    - if: $CI_COMMIT_TAG

stages:
  - build
  - test
  - publish


build-job:
  stage: build
  before_script:
      - apt update -y && apt install git -y
      - pip install -r requirements.txt
  script:
    - python3 -m build | tee build.log
  artifacts:
    untracked: false
    paths:
      - dist/*
      - build.log


test-install-job:
  stage: test
  script:
    - pip install dist/$(tail -1 build.log | awk '{print $NF}')
    - mkdir .install_test
    - cd .install_test 
    - python3 -c "from quadmompy import core; import quadmompy; print(f'The QuadMomPy version is {quadmompy.__version__}')"


pytest-job:
  stage: test
  before_script:
    - pip install dist/$(tail -1 build.log | awk '{print $NF}')[dev]
  script:
    - mkdir test
    - cp -r quadmompy/tests/ test/
    - cd test/
    - py.test -v | tee test.log


pylint-job:
  stage: test
  before_script:
    - PYLINT_ARGS=$(find {quadmompy,examples} -type f -name "*.py")
    - mkdir -p public/badges public/lint
    - echo undefined > public/badges/$CI_JOB_NAME.score
    - apt update && apt install git -y
    - pip install -r requirements.txt
    - pip install .
    - pip install pylint-gitlab
  script:
    - pylint --exit-zero --output-format=text $PYLINT_ARGS | tee /tmp/pylint.txt
    - sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' /tmp/pylint.txt > public/badges/$CI_JOB_NAME.score
    - pylint --exit-zero --output-format=pylint_gitlab.GitlabCodeClimateReporter $PYLINT_ARGS > codeclimate.json
    - pylint --exit-zero --output-format=pylint_gitlab.GitlabPagesHtmlReporter $PYLINT_ARGS > public/lint/index.html
  after_script:
    - anybadge --overwrite --label $CI_JOB_NAME --value=$(cat public/badges/$CI_JOB_NAME.score) --file=public/badges/$CI_JOB_NAME.svg 4=red 6=orange 8=yellow 10=green
    - |
      echo "Your score is: $(cat public/badges/$CI_JOB_NAME.score)"
  artifacts:
    paths:
      - public
    reports:
      codequality: codeclimate.json
    when: always


pypi-job:
  stage: publish
  rules:
    - if: $CI_COMMIT_TAG
  before_script: 
    - pip install twine
  script:
    - twine check dist/*
    - twine upload dist/* -u__token__ -p$PYPI_QUADMOMPY_ACCESS_TOKEN
