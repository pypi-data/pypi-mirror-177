

class ClassSpecificImageGeneration:
    """
    Produces an image that maximizes a certain class with gradient ascent.

    Args:
        model (torch.nn.Module): the model used
        target_class (int): the class for which the images will be generated
        size (tuple(int)): size of the input image
        out_dir (str): output directory
        mean (list): mean values between 0 and 1 for each channel (default: None)
        std (list): standard deviation values between 0 and 1 for each channel (default: None)

    Attributes:
        model (torch.nn.Module): the model used
        target_class (int): the class for which the images will be generated
        size (tuple(int)): size of the input image
        out_dir (str): output directory
        mean (list): mean values between 0 and 1 for each channel
        std (list): standard deviation values between 0 and 1 for each channel
        created_image (PIL image): the final image generated by the network, WxHx3 (channels last) format with int values between 0-255
    """
    def __init__(self, model, target_class, size, out_dir, mean=None, std=None):
        pass


    def generate(self, iterations=150):
        """
        Generates a class specific image by optimizing the network layers for the given class.

        Args:
            iterations (int): Total iterations for gradient ascent (default: 150)

        Returns:
            np.ndarray: Final maximally activated class image, HxWx3 (channels last) format with float values between 0-1
        """
        return self
