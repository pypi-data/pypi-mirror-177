#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
Сообщения
"""

# ######################################################################################################################
# Импорт необходимых инструментов
# ######################################################################################################################
# Подавление Warning
import warnings
for warn in [UserWarning, FutureWarning]: warnings.filterwarnings('ignore', category = warn)

from dataclasses import dataclass # Класс данных

from typing import List # Типы данных

# Персональные
from big5.modules.core.language import Language # Определение языка

# ######################################################################################################################
# Сообщения
# ######################################################################################################################
@dataclass
class Messages(Language):
    """Класс для сообщений

    Args:
        lang (str): Смотреть :attr:`~big5.modules.core.language.Language.lang`
    """

    # ------------------------------------------------------------------------------------------------------------------
    # Конструктор
    # ------------------------------------------------------------------------------------------------------------------

    def __post_init__(self):
        super().__post_init__() # Выполнение конструктора из суперкласса

        self._metadata: List[str] = [
            self._('big5 - персональные качества личности человека'),
            self._('Авторы'), self._('Сопровождающие'), self._('Версия'), self._('Лицензия')
        ]

        self._format_time: str = '%Y-%m-%d %H:%M:%S' # Формат времени

        self._invalid_arguments: str = self._('Неверные типы или значения аргументов в "{}" ...')

        self._oh: str = self._('Ой! Что-то пошло не так ... ')
        self._trouble: str = self._('Прям беда! ')

        self._unknown_err: str = self._trouble + self._('Не обработанную ошибку необходимо проанализировать и выявить '
                                                        'причину ...')

        self._som_ww: str = self._oh + self._('смотрите настройки ядра и цепочку выполнения действий ...')

        self._lock_user: str = self._('Выполнение заблокировано пользователем ...')

        self._text_runtime: str = self._('Время выполнения')

        self._download_precent: str = ' ({}%) ...'

        self._from_precent: str = self._('из')

    # ------------------------------------------------------------------------------------------------------------------
    # Документация
    # ------------------------------------------------------------------------------------------------------------------

    # __doc__ = Language.__doc__