# coding: utf-8

"""
    herd

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    OpenAPI spec version: 0.178.0-SNAPSHOT
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class EmrClusterDefinitionApplication(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'name': 'str',
        'version': 'str',
        'args': 'list[str]',
        'additional_info_list': 'list[Parameter]'
    }

    attribute_map = {
        'name': 'name',
        'version': 'version',
        'args': 'args',
        'additional_info_list': 'additionalInfoList'
    }

    def __init__(self, name=None, version=None, args=None, additional_info_list=None):  # noqa: E501
        """EmrClusterDefinitionApplication - a model defined in OpenAPI"""  # noqa: E501

        self._name = None
        self._version = None
        self._args = None
        self._additional_info_list = None
        self.discriminator = None

        if name is not None:
            self.name = name
        if version is not None:
            self.version = version
        if args is not None:
            self.args = args
        if additional_info_list is not None:
            self.additional_info_list = additional_info_list

    @property
    def name(self):
        """Gets the name of this EmrClusterDefinitionApplication.  # noqa: E501

        Application name  # noqa: E501

        :return: The name of this EmrClusterDefinitionApplication.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this EmrClusterDefinitionApplication.

        Application name  # noqa: E501

        :param name: The name of this EmrClusterDefinitionApplication.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def version(self):
        """Gets the version of this EmrClusterDefinitionApplication.  # noqa: E501

        Application version  # noqa: E501

        :return: The version of this EmrClusterDefinitionApplication.  # noqa: E501
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this EmrClusterDefinitionApplication.

        Application version  # noqa: E501

        :param version: The version of this EmrClusterDefinitionApplication.  # noqa: E501
        :type: str
        """

        self._version = version

    @property
    def args(self):
        """Gets the args of this EmrClusterDefinitionApplication.  # noqa: E501

        List of arguments  # noqa: E501

        :return: The args of this EmrClusterDefinitionApplication.  # noqa: E501
        :rtype: list[str]
        """
        return self._args

    @args.setter
    def args(self, args):
        """Sets the args of this EmrClusterDefinitionApplication.

        List of arguments  # noqa: E501

        :param args: The args of this EmrClusterDefinitionApplication.  # noqa: E501
        :type: list[str]
        """

        self._args = args

    @property
    def additional_info_list(self):
        """Gets the additional_info_list of this EmrClusterDefinitionApplication.  # noqa: E501

        List of additional info  # noqa: E501

        :return: The additional_info_list of this EmrClusterDefinitionApplication.  # noqa: E501
        :rtype: list[Parameter]
        """
        return self._additional_info_list

    @additional_info_list.setter
    def additional_info_list(self, additional_info_list):
        """Sets the additional_info_list of this EmrClusterDefinitionApplication.

        List of additional info  # noqa: E501

        :param additional_info_list: The additional_info_list of this EmrClusterDefinitionApplication.  # noqa: E501
        :type: list[Parameter]
        """

        self._additional_info_list = additional_info_list

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EmrClusterDefinitionApplication):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
