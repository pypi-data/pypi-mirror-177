# coding: utf-8

"""
    herd

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    OpenAPI spec version: 0.178.0-SNAPSHOT
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class PartitionValueFilter(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'partition_key': 'str',
        'partition_values': 'list[str]',
        'partition_value_range': 'PartitionValueRange',
        'latest_before_partition_value': 'LatestBeforePartitionValue',
        'latest_after_partition_value': 'LatestAfterPartitionValue'
    }

    attribute_map = {
        'partition_key': 'partitionKey',
        'partition_values': 'partitionValues',
        'partition_value_range': 'partitionValueRange',
        'latest_before_partition_value': 'latestBeforePartitionValue',
        'latest_after_partition_value': 'latestAfterPartitionValue'
    }

    def __init__(self, partition_key=None, partition_values=None, partition_value_range=None, latest_before_partition_value=None, latest_after_partition_value=None):  # noqa: E501
        """PartitionValueFilter - a model defined in OpenAPI"""  # noqa: E501

        self._partition_key = None
        self._partition_values = None
        self._partition_value_range = None
        self._latest_before_partition_value = None
        self._latest_after_partition_value = None
        self.discriminator = None

        if partition_key is not None:
            self.partition_key = partition_key
        if partition_values is not None:
            self.partition_values = partition_values
        if partition_value_range is not None:
            self.partition_value_range = partition_value_range
        if latest_before_partition_value is not None:
            self.latest_before_partition_value = latest_before_partition_value
        if latest_after_partition_value is not None:
            self.latest_after_partition_value = latest_after_partition_value

    @property
    def partition_key(self):
        """Gets the partition_key of this PartitionValueFilter.  # noqa: E501

        The Partition Key for a Business Object Data. This must be they Partition Key specified in the Business Object Format. Required                   when partitionValueFilters is present                  # noqa: E501

        :return: The partition_key of this PartitionValueFilter.  # noqa: E501
        :rtype: str
        """
        return self._partition_key

    @partition_key.setter
    def partition_key(self, partition_key):
        """Sets the partition_key of this PartitionValueFilter.

        The Partition Key for a Business Object Data. This must be they Partition Key specified in the Business Object Format. Required                   when partitionValueFilters is present                  # noqa: E501

        :param partition_key: The partition_key of this PartitionValueFilter.  # noqa: E501
        :type: str
        """

        self._partition_key = partition_key

    @property
    def partition_values(self):
        """Gets the partition_values of this PartitionValueFilter.  # noqa: E501

        This specifies a list of partition values. Required when partitionValueRange, latestBeforePartitionValue, or                   latestAfterPartitionValue is not present                  # noqa: E501

        :return: The partition_values of this PartitionValueFilter.  # noqa: E501
        :rtype: list[str]
        """
        return self._partition_values

    @partition_values.setter
    def partition_values(self, partition_values):
        """Sets the partition_values of this PartitionValueFilter.

        This specifies a list of partition values. Required when partitionValueRange, latestBeforePartitionValue, or                   latestAfterPartitionValue is not present                  # noqa: E501

        :param partition_values: The partition_values of this PartitionValueFilter.  # noqa: E501
        :type: list[str]
        """

        self._partition_values = partition_values

    @property
    def partition_value_range(self):
        """Gets the partition_value_range of this PartitionValueFilter.  # noqa: E501


        :return: The partition_value_range of this PartitionValueFilter.  # noqa: E501
        :rtype: PartitionValueRange
        """
        return self._partition_value_range

    @partition_value_range.setter
    def partition_value_range(self, partition_value_range):
        """Sets the partition_value_range of this PartitionValueFilter.


        :param partition_value_range: The partition_value_range of this PartitionValueFilter.  # noqa: E501
        :type: PartitionValueRange
        """

        self._partition_value_range = partition_value_range

    @property
    def latest_before_partition_value(self):
        """Gets the latest_before_partition_value of this PartitionValueFilter.  # noqa: E501


        :return: The latest_before_partition_value of this PartitionValueFilter.  # noqa: E501
        :rtype: LatestBeforePartitionValue
        """
        return self._latest_before_partition_value

    @latest_before_partition_value.setter
    def latest_before_partition_value(self, latest_before_partition_value):
        """Sets the latest_before_partition_value of this PartitionValueFilter.


        :param latest_before_partition_value: The latest_before_partition_value of this PartitionValueFilter.  # noqa: E501
        :type: LatestBeforePartitionValue
        """

        self._latest_before_partition_value = latest_before_partition_value

    @property
    def latest_after_partition_value(self):
        """Gets the latest_after_partition_value of this PartitionValueFilter.  # noqa: E501


        :return: The latest_after_partition_value of this PartitionValueFilter.  # noqa: E501
        :rtype: LatestAfterPartitionValue
        """
        return self._latest_after_partition_value

    @latest_after_partition_value.setter
    def latest_after_partition_value(self, latest_after_partition_value):
        """Sets the latest_after_partition_value of this PartitionValueFilter.


        :param latest_after_partition_value: The latest_after_partition_value of this PartitionValueFilter.  # noqa: E501
        :type: LatestAfterPartitionValue
        """

        self._latest_after_partition_value = latest_after_partition_value

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PartitionValueFilter):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
