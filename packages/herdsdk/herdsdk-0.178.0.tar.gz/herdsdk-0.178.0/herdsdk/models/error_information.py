# coding: utf-8

"""
    herd

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    OpenAPI spec version: 0.178.0-SNAPSHOT
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class ErrorInformation(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'status_code': 'int',
        'status_description': 'str',
        'message': 'str',
        'message_details': 'list[str]'
    }

    attribute_map = {
        'status_code': 'statusCode',
        'status_description': 'statusDescription',
        'message': 'message',
        'message_details': 'messageDetails'
    }

    def __init__(self, status_code=None, status_description=None, message=None, message_details=None):  # noqa: E501
        """ErrorInformation - a model defined in OpenAPI"""  # noqa: E501

        self._status_code = None
        self._status_description = None
        self._message = None
        self._message_details = None
        self.discriminator = None

        if status_code is not None:
            self.status_code = status_code
        self.status_description = status_description
        self.message = message
        if message_details is not None:
            self.message_details = message_details

    @property
    def status_code(self):
        """Gets the status_code of this ErrorInformation.  # noqa: E501


        :return: The status_code of this ErrorInformation.  # noqa: E501
        :rtype: int
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this ErrorInformation.


        :param status_code: The status_code of this ErrorInformation.  # noqa: E501
        :type: int
        """

        self._status_code = status_code

    @property
    def status_description(self):
        """Gets the status_description of this ErrorInformation.  # noqa: E501


        :return: The status_description of this ErrorInformation.  # noqa: E501
        :rtype: str
        """
        return self._status_description

    @status_description.setter
    def status_description(self, status_description):
        """Sets the status_description of this ErrorInformation.


        :param status_description: The status_description of this ErrorInformation.  # noqa: E501
        :type: str
        """
        if status_description is None:
            raise ValueError("Invalid value for `status_description`, must not be `None`")  # noqa: E501

        self._status_description = status_description

    @property
    def message(self):
        """Gets the message of this ErrorInformation.  # noqa: E501


        :return: The message of this ErrorInformation.  # noqa: E501
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this ErrorInformation.


        :param message: The message of this ErrorInformation.  # noqa: E501
        :type: str
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")  # noqa: E501

        self._message = message

    @property
    def message_details(self):
        """Gets the message_details of this ErrorInformation.  # noqa: E501


        :return: The message_details of this ErrorInformation.  # noqa: E501
        :rtype: list[str]
        """
        return self._message_details

    @message_details.setter
    def message_details(self, message_details):
        """Sets the message_details of this ErrorInformation.


        :param message_details: The message_details of this ErrorInformation.  # noqa: E501
        :type: list[str]
        """

        self._message_details = message_details

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ErrorInformation):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
