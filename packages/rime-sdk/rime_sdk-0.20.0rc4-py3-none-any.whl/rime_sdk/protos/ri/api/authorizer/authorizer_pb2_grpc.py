# autogenerated
# mypy: ignore-errors
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from rime_sdk.protos.ri.api.authorizer import authorizer_pb2 as ri_dot_api_dot_authorizer_dot_authorizer__pb2


class AuthorizerStub(object):
    """Authorizer service to verify permissions on requests.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Authorize = channel.unary_unary(
                '/rime.Authorizer/Authorize',
                request_serializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.AuthorizeRequest.SerializeToString,
                response_deserializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.AuthorizeResponse.FromString,
                )
        self.CreateGrants = channel.unary_unary(
                '/rime.Authorizer/CreateGrants',
                request_serializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.CreateGrantsRequest.SerializeToString,
                response_deserializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.CreateGrantsResponse.FromString,
                )
        self.DeleteGrant = channel.unary_unary(
                '/rime.Authorizer/DeleteGrant',
                request_serializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.DeleteGrantRequest.SerializeToString,
                response_deserializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.DeleteGrantResponse.FromString,
                )
        self.UpdateGrant = channel.unary_unary(
                '/rime.Authorizer/UpdateGrant',
                request_serializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.UpdateGrantRequest.SerializeToString,
                response_deserializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.UpdateGrantResponse.FromString,
                )
        self.ListGrantsForActor = channel.unary_unary(
                '/rime.Authorizer/ListGrantsForActor',
                request_serializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.ListGrantsForActorRequest.SerializeToString,
                response_deserializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.ListGrantsForActorResponse.FromString,
                )
        self.ListGrantsOnSubject = channel.unary_unary(
                '/rime.Authorizer/ListGrantsOnSubject',
                request_serializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.ListGrantsOnSubjectRequest.SerializeToString,
                response_deserializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.ListGrantsOnSubjectResponse.FromString,
                )
        self.AddSubject = channel.unary_unary(
                '/rime.Authorizer/AddSubject',
                request_serializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.AddSubjectRequest.SerializeToString,
                response_deserializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.AddSubjectResponse.FromString,
                )
        self.DeleteSubject = channel.unary_unary(
                '/rime.Authorizer/DeleteSubject',
                request_serializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.DeleteSubjectRequest.SerializeToString,
                response_deserializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.DeleteSubjectResponse.FromString,
                )
        self.DeleteActor = channel.unary_unary(
                '/rime.Authorizer/DeleteActor',
                request_serializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.DeleteActorRequest.SerializeToString,
                response_deserializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.DeleteActorResponse.FromString,
                )


class AuthorizerServicer(object):
    """Authorizer service to verify permissions on requests.
    """

    def Authorize(self, request, context):
        """Authorizer endpoints
        Authorize a request.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateGrants(self, request, context):
        """Create a role grant for an actor.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteGrant(self, request, context):
        """Delete a role grant for an actor.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateGrant(self, request, context):
        """Update a role grant for an actor.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListGrantsForActor(self, request, context):
        """List role grants for an actor
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListGrantsOnSubject(self, request, context):
        """List role grants on a subject
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddSubject(self, request, context):
        """Add permissions and create roles for a new subject
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSubject(self, request, context):
        """Delete permissions and all roles/links for a subject
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteActor(self, request, context):
        """Delete all grants for an actor
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthorizerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Authorize': grpc.unary_unary_rpc_method_handler(
                    servicer.Authorize,
                    request_deserializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.AuthorizeRequest.FromString,
                    response_serializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.AuthorizeResponse.SerializeToString,
            ),
            'CreateGrants': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateGrants,
                    request_deserializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.CreateGrantsRequest.FromString,
                    response_serializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.CreateGrantsResponse.SerializeToString,
            ),
            'DeleteGrant': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteGrant,
                    request_deserializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.DeleteGrantRequest.FromString,
                    response_serializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.DeleteGrantResponse.SerializeToString,
            ),
            'UpdateGrant': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateGrant,
                    request_deserializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.UpdateGrantRequest.FromString,
                    response_serializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.UpdateGrantResponse.SerializeToString,
            ),
            'ListGrantsForActor': grpc.unary_unary_rpc_method_handler(
                    servicer.ListGrantsForActor,
                    request_deserializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.ListGrantsForActorRequest.FromString,
                    response_serializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.ListGrantsForActorResponse.SerializeToString,
            ),
            'ListGrantsOnSubject': grpc.unary_unary_rpc_method_handler(
                    servicer.ListGrantsOnSubject,
                    request_deserializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.ListGrantsOnSubjectRequest.FromString,
                    response_serializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.ListGrantsOnSubjectResponse.SerializeToString,
            ),
            'AddSubject': grpc.unary_unary_rpc_method_handler(
                    servicer.AddSubject,
                    request_deserializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.AddSubjectRequest.FromString,
                    response_serializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.AddSubjectResponse.SerializeToString,
            ),
            'DeleteSubject': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteSubject,
                    request_deserializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.DeleteSubjectRequest.FromString,
                    response_serializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.DeleteSubjectResponse.SerializeToString,
            ),
            'DeleteActor': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteActor,
                    request_deserializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.DeleteActorRequest.FromString,
                    response_serializer=ri_dot_api_dot_authorizer_dot_authorizer__pb2.DeleteActorResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'rime.Authorizer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Authorizer(object):
    """Authorizer service to verify permissions on requests.
    """

    @staticmethod
    def Authorize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.Authorizer/Authorize',
            ri_dot_api_dot_authorizer_dot_authorizer__pb2.AuthorizeRequest.SerializeToString,
            ri_dot_api_dot_authorizer_dot_authorizer__pb2.AuthorizeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateGrants(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.Authorizer/CreateGrants',
            ri_dot_api_dot_authorizer_dot_authorizer__pb2.CreateGrantsRequest.SerializeToString,
            ri_dot_api_dot_authorizer_dot_authorizer__pb2.CreateGrantsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteGrant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.Authorizer/DeleteGrant',
            ri_dot_api_dot_authorizer_dot_authorizer__pb2.DeleteGrantRequest.SerializeToString,
            ri_dot_api_dot_authorizer_dot_authorizer__pb2.DeleteGrantResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateGrant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.Authorizer/UpdateGrant',
            ri_dot_api_dot_authorizer_dot_authorizer__pb2.UpdateGrantRequest.SerializeToString,
            ri_dot_api_dot_authorizer_dot_authorizer__pb2.UpdateGrantResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListGrantsForActor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.Authorizer/ListGrantsForActor',
            ri_dot_api_dot_authorizer_dot_authorizer__pb2.ListGrantsForActorRequest.SerializeToString,
            ri_dot_api_dot_authorizer_dot_authorizer__pb2.ListGrantsForActorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListGrantsOnSubject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.Authorizer/ListGrantsOnSubject',
            ri_dot_api_dot_authorizer_dot_authorizer__pb2.ListGrantsOnSubjectRequest.SerializeToString,
            ri_dot_api_dot_authorizer_dot_authorizer__pb2.ListGrantsOnSubjectResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddSubject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.Authorizer/AddSubject',
            ri_dot_api_dot_authorizer_dot_authorizer__pb2.AddSubjectRequest.SerializeToString,
            ri_dot_api_dot_authorizer_dot_authorizer__pb2.AddSubjectResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteSubject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.Authorizer/DeleteSubject',
            ri_dot_api_dot_authorizer_dot_authorizer__pb2.DeleteSubjectRequest.SerializeToString,
            ri_dot_api_dot_authorizer_dot_authorizer__pb2.DeleteSubjectResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteActor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.Authorizer/DeleteActor',
            ri_dot_api_dot_authorizer_dot_authorizer__pb2.DeleteActorRequest.SerializeToString,
            ri_dot_api_dot_authorizer_dot_authorizer__pb2.DeleteActorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
