# autogenerated
# mypy: ignore-errors
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from rime_sdk.protos.ri.api.fileupload import file_upload_pb2 as ri_dot_api_dot_fileupload_dot_file__upload__pb2


class FileUploadStub(object):
    """FileUpload handle file upload from users to blob store location.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDatasetFileUploadURL = channel.unary_unary(
                '/rime.FileUpload/GetDatasetFileUploadURL',
                request_serializer=ri_dot_api_dot_fileupload_dot_file__upload__pb2.GetDatasetFileUploadURLRequest.SerializeToString,
                response_deserializer=ri_dot_api_dot_fileupload_dot_file__upload__pb2.GetDatasetFileUploadURLResponse.FromString,
                )
        self.GetModelDirectoryUploadURLs = channel.unary_unary(
                '/rime.FileUpload/GetModelDirectoryUploadURLs',
                request_serializer=ri_dot_api_dot_fileupload_dot_file__upload__pb2.GetModelDirectoryUploadURLsRequest.SerializeToString,
                response_deserializer=ri_dot_api_dot_fileupload_dot_file__upload__pb2.GetModelDirectoryUploadURLsResponse.FromString,
                )
        self.ListUploadedFileURLs = channel.unary_unary(
                '/rime.FileUpload/ListUploadedFileURLs',
                request_serializer=ri_dot_api_dot_fileupload_dot_file__upload__pb2.ListUploadedFileURLsRequest.SerializeToString,
                response_deserializer=ri_dot_api_dot_fileupload_dot_file__upload__pb2.ListUploadedFileURLsResponse.FromString,
                )


class FileUploadServicer(object):
    """FileUpload handle file upload from users to blob store location.
    """

    def GetDatasetFileUploadURL(self, request, context):
        """GetDatasetFileUploadURL

        Returns a pre-signed upload URL for a dataset.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetModelDirectoryUploadURLs(self, request, context):
        """GetModelDirectoryUploadURL

        Returns a pre-signed upload URL for a model directory.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUploadedFileURLs(self, request, context):
        """ListUploadedFileURLs

        List URLs for all uploaded files
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FileUploadServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDatasetFileUploadURL': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDatasetFileUploadURL,
                    request_deserializer=ri_dot_api_dot_fileupload_dot_file__upload__pb2.GetDatasetFileUploadURLRequest.FromString,
                    response_serializer=ri_dot_api_dot_fileupload_dot_file__upload__pb2.GetDatasetFileUploadURLResponse.SerializeToString,
            ),
            'GetModelDirectoryUploadURLs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetModelDirectoryUploadURLs,
                    request_deserializer=ri_dot_api_dot_fileupload_dot_file__upload__pb2.GetModelDirectoryUploadURLsRequest.FromString,
                    response_serializer=ri_dot_api_dot_fileupload_dot_file__upload__pb2.GetModelDirectoryUploadURLsResponse.SerializeToString,
            ),
            'ListUploadedFileURLs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUploadedFileURLs,
                    request_deserializer=ri_dot_api_dot_fileupload_dot_file__upload__pb2.ListUploadedFileURLsRequest.FromString,
                    response_serializer=ri_dot_api_dot_fileupload_dot_file__upload__pb2.ListUploadedFileURLsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'rime.FileUpload', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FileUpload(object):
    """FileUpload handle file upload from users to blob store location.
    """

    @staticmethod
    def GetDatasetFileUploadURL(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.FileUpload/GetDatasetFileUploadURL',
            ri_dot_api_dot_fileupload_dot_file__upload__pb2.GetDatasetFileUploadURLRequest.SerializeToString,
            ri_dot_api_dot_fileupload_dot_file__upload__pb2.GetDatasetFileUploadURLResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetModelDirectoryUploadURLs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.FileUpload/GetModelDirectoryUploadURLs',
            ri_dot_api_dot_fileupload_dot_file__upload__pb2.GetModelDirectoryUploadURLsRequest.SerializeToString,
            ri_dot_api_dot_fileupload_dot_file__upload__pb2.GetModelDirectoryUploadURLsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListUploadedFileURLs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.FileUpload/ListUploadedFileURLs',
            ri_dot_api_dot_fileupload_dot_file__upload__pb2.ListUploadedFileURLsRequest.SerializeToString,
            ri_dot_api_dot_fileupload_dot_file__upload__pb2.ListUploadedFileURLsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
