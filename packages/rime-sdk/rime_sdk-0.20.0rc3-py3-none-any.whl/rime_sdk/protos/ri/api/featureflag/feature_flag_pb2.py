# autogenerated
# mypy: ignore-errors
# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ri/api/featureflag/feature_flag.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from rime_sdk.protos.google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from rime_sdk.protos.google.api import visibility_pb2 as google_dot_api_dot_visibility__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from rime_sdk.protos.grpc_gateway.openapi import annotations_pb2 as grpc__gateway_dot_openapi_dot_annotations__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n%ri/api/featureflag/feature_flag.proto\x12\x04rime\x1a\x1cgoogle/api/annotations.proto\x1a\x1bgoogle/api/visibility.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a&grpc_gateway/openapi/annotations.proto\"P\n\x19UpsertFeatureFlagsRequest\x12\x15\n\rcustomer_name\x18\x01 \x01(\t\x12\x1c\n\x14signed_jwt_token_str\x18\x02 \x01(\t\"\x1c\n\x1aUpsertFeatureFlagsResponse\"3\n\x16GetFeatureFlagsRequest\x12\x15\n\rcustomer_name\x18\x01 \x01(\t:\x02\x18\x01\"H\n\x17GetFeatureFlagsResponse\x12)\n\rfeature_flags\x18\x01 \x01(\x0b\x32\x12.rime.FeatureFlags:\x02\x18\x01\"Q\n\x15GetLimitStatusRequest\x12\x15\n\rcustomer_name\x18\x01 \x01(\t\x12!\n\x05limit\x18\x02 \x01(\x0e\x32\x12.rime.LicenseLimit\"A\n\x16GetLimitStatusResponse\x12\'\n\x0climit_status\x18\x01 \x01(\x0b\x32\x11.rime.LimitStatus\"X\n\x18GetEnabledFeatureRequest\x12\x15\n\rcustomer_name\x18\x01 \x01(\t\x12%\n\x07\x66\x65\x61ture\x18\x02 \x01(\x0e\x32\x14.rime.LicenseFeature\"S\n\x19GetEnabledFeatureResponse\x12%\n\x07\x66\x65\x61ture\x18\x01 \x01(\x0e\x32\x14.rime.LicenseFeature\x12\x0f\n\x07\x65nabled\x18\x02 \x01(\x08\"2\n\x19ListEnabledFeatureRequest\x12\x15\n\rcustomer_name\x18\x01 \x01(\t\"c\n\x1aListEnabledFeatureResponse\x12\x15\n\rcustomer_name\x18\x01 \x01(\t\x12.\n\x10\x65nabled_features\x18\x02 \x03(\x0e\x32\x14.rime.LicenseFeature\"\x8b\x02\n\x0c\x46\x65\x61tureFlags\x12\x15\n\rcustomer_name\x18\x01 \x01(\t\x12#\n\x08run_mode\x18\x02 \x01(\x0e\x32\x11.rime.TestRunMode\x12@\n\x1csubscription_expiration_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x14\n\x0cnum_projects\x18\x04 \x01(\x04\x12\x15\n\rnum_test_runs\x18\x05 \x01(\x04\x12\x19\n\x11upload_size_bytes\x18\x06 \x01(\x04\x12\x1a\n\x12\x65nable_model_cards\x18\x07 \x01(\x08\x12\x15\n\rnum_firewalls\x18\x08 \x01(\x04:\x02\x18\x01\"\xc4\x01\n\x0bLimitStatus\x12!\n\x05limit\x18\x01 \x01(\x0e\x32\x12.rime.LicenseLimit\x12.\n\x0climit_status\x18\x02 \x01(\x0e\x32\x18.rime.LimitStatus.Status\x12\x13\n\x0blimit_value\x18\x03 \x01(\x03\x12\x15\n\rcurrent_value\x18\x04 \x01(\x03\"6\n\x06Status\x12\x0f\n\x0bUNSPECIFIED\x10\x00\x12\x06\n\x02OK\x10\x01\x12\x08\n\x04WARN\x10\x02\x12\t\n\x05\x45RROR\x10\x03\"1\n\x18GetFeatureFlagJwtRequest\x12\x15\n\rcustomer_name\x18\x01 \x01(\t\"9\n\x19GetFeatureFlagJwtResponse\x12\x1c\n\x14signed_jwt_token_str\x18\x02 \x01(\t*a\n\x0bTestRunMode\x12\x0f\n\x0bUNSPECIFIED\x10\x00\x12\n\n\x06STRESS\x10\x01\x12\x11\n\rFW_CONTINUOUS\x10\x02\x12\x0f\n\x0b\x46W_REALTIME\x10\x03\x12\r\n\tREAD_ONLY\x10\x04\x1a\x02\x18\x01*\x8b\x01\n\x0cLicenseLimit\x12\x1d\n\x19LICENSE_LIMIT_UNSPECIFIED\x10\x00\x12\x1c\n\x18LICENSE_LIMIT_EXPIRATION\x10\x01\x12\"\n\x1eLICENSE_LIMIT_STRESS_TEST_RUNS\x10\x02\x12\x1a\n\x16LICENSE_LIMIT_FIREWALL\x10\x03*\x9b\x02\n\x0eLicenseFeature\x12\x1f\n\x1bLICENSE_FEATURE_UNSPECIFIED\x10\x00\x12\x1a\n\x16LICENSE_FEATURE_STRESS\x10\x01\x12!\n\x1dLICENSE_FEATURE_FW_CONTINUOUS\x10\x02\x12\x1f\n\x1bLICENSE_FEATURE_FW_REALTIME\x10\x03\x12\x1f\n\x1bLICENSE_FEATURE_MODEL_CARDS\x10\x04\x12\x1d\n\x19LICENSE_FEATURE_READ_ONLY\x10\x05\x12 \n\x1cLICENSE_FEATURE_SCHEDULED_CT\x10\x06\x12&\n\"LICENSE_FEATURE_PRODUCTION_SUMMARY\x10\x07\x32\xab\x06\n\x0b\x46\x65\x61tureFlag\x12\x94\x01\n\x11UpsertFeatureFlag\x12\x1f.rime.UpsertFeatureFlagsRequest\x1a .rime.UpsertFeatureFlagsResponse\"<\xfa\xd2\xe4\x93\x02\n\x12\x08INTERNAL\x82\xd3\xe4\x93\x02&\x1a!/v1/feature-flags/{customer_name}:\x01*\x12\x80\x01\n\x0eGetFeatureFlag\x12\x1c.rime.GetFeatureFlagsRequest\x1a\x1d.rime.GetFeatureFlagsResponse\"1\x88\x02\x01\x82\xd3\xe4\x93\x02#\x12!/v1/feature-flags/{customer_name}\x92\x41\x02X\x01\x12\x85\x01\n\x0eGetLimitStatus\x12\x1b.rime.GetLimitStatusRequest\x1a\x1c.rime.GetLimitStatusResponse\"8\x82\xd3\xe4\x93\x02\x32\x12\x30/v1/feature-flags/{customer_name}/limits/{limit}\x12\x92\x01\n\x11GetEnabledFeature\x12\x1e.rime.GetEnabledFeatureRequest\x1a\x1f.rime.GetEnabledFeatureResponse\"<\x82\xd3\xe4\x93\x02\x36\x12\x34/v1/feature-flags/{customer_name}/features/{feature}\x12\x8c\x01\n\x13ListEnabledFeatures\x12\x1f.rime.ListEnabledFeatureRequest\x1a .rime.ListEnabledFeatureResponse\"2\x82\xd3\xe4\x93\x02,\x12*/v1/feature-flags/{customer_name}/features\x12V\n\x11GetFeatureFlagJwt\x12\x1e.rime.GetFeatureFlagJwtRequest\x1a\x1f.rime.GetFeatureFlagJwtResponse\"\x00\x42#Z!ri/_gen/protos/ri/api/featureflagb\x06proto3')

_TESTRUNMODE = DESCRIPTOR.enum_types_by_name['TestRunMode']
TestRunMode = enum_type_wrapper.EnumTypeWrapper(_TESTRUNMODE)
_LICENSELIMIT = DESCRIPTOR.enum_types_by_name['LicenseLimit']
LicenseLimit = enum_type_wrapper.EnumTypeWrapper(_LICENSELIMIT)
_LICENSEFEATURE = DESCRIPTOR.enum_types_by_name['LicenseFeature']
LicenseFeature = enum_type_wrapper.EnumTypeWrapper(_LICENSEFEATURE)
UNSPECIFIED = 0
STRESS = 1
FW_CONTINUOUS = 2
FW_REALTIME = 3
READ_ONLY = 4
LICENSE_LIMIT_UNSPECIFIED = 0
LICENSE_LIMIT_EXPIRATION = 1
LICENSE_LIMIT_STRESS_TEST_RUNS = 2
LICENSE_LIMIT_FIREWALL = 3
LICENSE_FEATURE_UNSPECIFIED = 0
LICENSE_FEATURE_STRESS = 1
LICENSE_FEATURE_FW_CONTINUOUS = 2
LICENSE_FEATURE_FW_REALTIME = 3
LICENSE_FEATURE_MODEL_CARDS = 4
LICENSE_FEATURE_READ_ONLY = 5
LICENSE_FEATURE_SCHEDULED_CT = 6
LICENSE_FEATURE_PRODUCTION_SUMMARY = 7


_UPSERTFEATUREFLAGSREQUEST = DESCRIPTOR.message_types_by_name['UpsertFeatureFlagsRequest']
_UPSERTFEATUREFLAGSRESPONSE = DESCRIPTOR.message_types_by_name['UpsertFeatureFlagsResponse']
_GETFEATUREFLAGSREQUEST = DESCRIPTOR.message_types_by_name['GetFeatureFlagsRequest']
_GETFEATUREFLAGSRESPONSE = DESCRIPTOR.message_types_by_name['GetFeatureFlagsResponse']
_GETLIMITSTATUSREQUEST = DESCRIPTOR.message_types_by_name['GetLimitStatusRequest']
_GETLIMITSTATUSRESPONSE = DESCRIPTOR.message_types_by_name['GetLimitStatusResponse']
_GETENABLEDFEATUREREQUEST = DESCRIPTOR.message_types_by_name['GetEnabledFeatureRequest']
_GETENABLEDFEATURERESPONSE = DESCRIPTOR.message_types_by_name['GetEnabledFeatureResponse']
_LISTENABLEDFEATUREREQUEST = DESCRIPTOR.message_types_by_name['ListEnabledFeatureRequest']
_LISTENABLEDFEATURERESPONSE = DESCRIPTOR.message_types_by_name['ListEnabledFeatureResponse']
_FEATUREFLAGS = DESCRIPTOR.message_types_by_name['FeatureFlags']
_LIMITSTATUS = DESCRIPTOR.message_types_by_name['LimitStatus']
_GETFEATUREFLAGJWTREQUEST = DESCRIPTOR.message_types_by_name['GetFeatureFlagJwtRequest']
_GETFEATUREFLAGJWTRESPONSE = DESCRIPTOR.message_types_by_name['GetFeatureFlagJwtResponse']
_LIMITSTATUS_STATUS = _LIMITSTATUS.enum_types_by_name['Status']
UpsertFeatureFlagsRequest = _reflection.GeneratedProtocolMessageType('UpsertFeatureFlagsRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPSERTFEATUREFLAGSREQUEST,
  '__module__' : 'rime_sdk.protos.ri.api.featureflag.feature_flag_pb2'
  # @@protoc_insertion_point(class_scope:rime.UpsertFeatureFlagsRequest)
  })
_sym_db.RegisterMessage(UpsertFeatureFlagsRequest)

UpsertFeatureFlagsResponse = _reflection.GeneratedProtocolMessageType('UpsertFeatureFlagsResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPSERTFEATUREFLAGSRESPONSE,
  '__module__' : 'rime_sdk.protos.ri.api.featureflag.feature_flag_pb2'
  # @@protoc_insertion_point(class_scope:rime.UpsertFeatureFlagsResponse)
  })
_sym_db.RegisterMessage(UpsertFeatureFlagsResponse)

GetFeatureFlagsRequest = _reflection.GeneratedProtocolMessageType('GetFeatureFlagsRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETFEATUREFLAGSREQUEST,
  '__module__' : 'rime_sdk.protos.ri.api.featureflag.feature_flag_pb2'
  # @@protoc_insertion_point(class_scope:rime.GetFeatureFlagsRequest)
  })
_sym_db.RegisterMessage(GetFeatureFlagsRequest)

GetFeatureFlagsResponse = _reflection.GeneratedProtocolMessageType('GetFeatureFlagsResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETFEATUREFLAGSRESPONSE,
  '__module__' : 'rime_sdk.protos.ri.api.featureflag.feature_flag_pb2'
  # @@protoc_insertion_point(class_scope:rime.GetFeatureFlagsResponse)
  })
_sym_db.RegisterMessage(GetFeatureFlagsResponse)

GetLimitStatusRequest = _reflection.GeneratedProtocolMessageType('GetLimitStatusRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETLIMITSTATUSREQUEST,
  '__module__' : 'rime_sdk.protos.ri.api.featureflag.feature_flag_pb2'
  # @@protoc_insertion_point(class_scope:rime.GetLimitStatusRequest)
  })
_sym_db.RegisterMessage(GetLimitStatusRequest)

GetLimitStatusResponse = _reflection.GeneratedProtocolMessageType('GetLimitStatusResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETLIMITSTATUSRESPONSE,
  '__module__' : 'rime_sdk.protos.ri.api.featureflag.feature_flag_pb2'
  # @@protoc_insertion_point(class_scope:rime.GetLimitStatusResponse)
  })
_sym_db.RegisterMessage(GetLimitStatusResponse)

GetEnabledFeatureRequest = _reflection.GeneratedProtocolMessageType('GetEnabledFeatureRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETENABLEDFEATUREREQUEST,
  '__module__' : 'rime_sdk.protos.ri.api.featureflag.feature_flag_pb2'
  # @@protoc_insertion_point(class_scope:rime.GetEnabledFeatureRequest)
  })
_sym_db.RegisterMessage(GetEnabledFeatureRequest)

GetEnabledFeatureResponse = _reflection.GeneratedProtocolMessageType('GetEnabledFeatureResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETENABLEDFEATURERESPONSE,
  '__module__' : 'rime_sdk.protos.ri.api.featureflag.feature_flag_pb2'
  # @@protoc_insertion_point(class_scope:rime.GetEnabledFeatureResponse)
  })
_sym_db.RegisterMessage(GetEnabledFeatureResponse)

ListEnabledFeatureRequest = _reflection.GeneratedProtocolMessageType('ListEnabledFeatureRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTENABLEDFEATUREREQUEST,
  '__module__' : 'rime_sdk.protos.ri.api.featureflag.feature_flag_pb2'
  # @@protoc_insertion_point(class_scope:rime.ListEnabledFeatureRequest)
  })
_sym_db.RegisterMessage(ListEnabledFeatureRequest)

ListEnabledFeatureResponse = _reflection.GeneratedProtocolMessageType('ListEnabledFeatureResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTENABLEDFEATURERESPONSE,
  '__module__' : 'rime_sdk.protos.ri.api.featureflag.feature_flag_pb2'
  # @@protoc_insertion_point(class_scope:rime.ListEnabledFeatureResponse)
  })
_sym_db.RegisterMessage(ListEnabledFeatureResponse)

FeatureFlags = _reflection.GeneratedProtocolMessageType('FeatureFlags', (_message.Message,), {
  'DESCRIPTOR' : _FEATUREFLAGS,
  '__module__' : 'rime_sdk.protos.ri.api.featureflag.feature_flag_pb2'
  # @@protoc_insertion_point(class_scope:rime.FeatureFlags)
  })
_sym_db.RegisterMessage(FeatureFlags)

LimitStatus = _reflection.GeneratedProtocolMessageType('LimitStatus', (_message.Message,), {
  'DESCRIPTOR' : _LIMITSTATUS,
  '__module__' : 'rime_sdk.protos.ri.api.featureflag.feature_flag_pb2'
  # @@protoc_insertion_point(class_scope:rime.LimitStatus)
  })
_sym_db.RegisterMessage(LimitStatus)

GetFeatureFlagJwtRequest = _reflection.GeneratedProtocolMessageType('GetFeatureFlagJwtRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETFEATUREFLAGJWTREQUEST,
  '__module__' : 'rime_sdk.protos.ri.api.featureflag.feature_flag_pb2'
  # @@protoc_insertion_point(class_scope:rime.GetFeatureFlagJwtRequest)
  })
_sym_db.RegisterMessage(GetFeatureFlagJwtRequest)

GetFeatureFlagJwtResponse = _reflection.GeneratedProtocolMessageType('GetFeatureFlagJwtResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETFEATUREFLAGJWTRESPONSE,
  '__module__' : 'rime_sdk.protos.ri.api.featureflag.feature_flag_pb2'
  # @@protoc_insertion_point(class_scope:rime.GetFeatureFlagJwtResponse)
  })
_sym_db.RegisterMessage(GetFeatureFlagJwtResponse)

_FEATUREFLAG = DESCRIPTOR.services_by_name['FeatureFlag']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z!ri/_gen/protos/ri/api/featureflag'
  _TESTRUNMODE._options = None
  _TESTRUNMODE._serialized_options = b'\030\001'
  _GETFEATUREFLAGSREQUEST._options = None
  _GETFEATUREFLAGSREQUEST._serialized_options = b'\030\001'
  _GETFEATUREFLAGSRESPONSE._options = None
  _GETFEATUREFLAGSRESPONSE._serialized_options = b'\030\001'
  _FEATUREFLAGS._options = None
  _FEATUREFLAGS._serialized_options = b'\030\001'
  _FEATUREFLAG.methods_by_name['UpsertFeatureFlag']._options = None
  _FEATUREFLAG.methods_by_name['UpsertFeatureFlag']._serialized_options = b'\372\322\344\223\002\n\022\010INTERNAL\202\323\344\223\002&\032!/v1/feature-flags/{customer_name}:\001*'
  _FEATUREFLAG.methods_by_name['GetFeatureFlag']._options = None
  _FEATUREFLAG.methods_by_name['GetFeatureFlag']._serialized_options = b'\210\002\001\202\323\344\223\002#\022!/v1/feature-flags/{customer_name}\222A\002X\001'
  _FEATUREFLAG.methods_by_name['GetLimitStatus']._options = None
  _FEATUREFLAG.methods_by_name['GetLimitStatus']._serialized_options = b'\202\323\344\223\0022\0220/v1/feature-flags/{customer_name}/limits/{limit}'
  _FEATUREFLAG.methods_by_name['GetEnabledFeature']._options = None
  _FEATUREFLAG.methods_by_name['GetEnabledFeature']._serialized_options = b'\202\323\344\223\0026\0224/v1/feature-flags/{customer_name}/features/{feature}'
  _FEATUREFLAG.methods_by_name['ListEnabledFeatures']._options = None
  _FEATUREFLAG.methods_by_name['ListEnabledFeatures']._serialized_options = b'\202\323\344\223\002,\022*/v1/feature-flags/{customer_name}/features'
  _TESTRUNMODE._serialized_start=1475
  _TESTRUNMODE._serialized_end=1572
  _LICENSELIMIT._serialized_start=1575
  _LICENSELIMIT._serialized_end=1714
  _LICENSEFEATURE._serialized_start=1717
  _LICENSEFEATURE._serialized_end=2000
  _UPSERTFEATUREFLAGSREQUEST._serialized_start=179
  _UPSERTFEATUREFLAGSREQUEST._serialized_end=259
  _UPSERTFEATUREFLAGSRESPONSE._serialized_start=261
  _UPSERTFEATUREFLAGSRESPONSE._serialized_end=289
  _GETFEATUREFLAGSREQUEST._serialized_start=291
  _GETFEATUREFLAGSREQUEST._serialized_end=342
  _GETFEATUREFLAGSRESPONSE._serialized_start=344
  _GETFEATUREFLAGSRESPONSE._serialized_end=416
  _GETLIMITSTATUSREQUEST._serialized_start=418
  _GETLIMITSTATUSREQUEST._serialized_end=499
  _GETLIMITSTATUSRESPONSE._serialized_start=501
  _GETLIMITSTATUSRESPONSE._serialized_end=566
  _GETENABLEDFEATUREREQUEST._serialized_start=568
  _GETENABLEDFEATUREREQUEST._serialized_end=656
  _GETENABLEDFEATURERESPONSE._serialized_start=658
  _GETENABLEDFEATURERESPONSE._serialized_end=741
  _LISTENABLEDFEATUREREQUEST._serialized_start=743
  _LISTENABLEDFEATUREREQUEST._serialized_end=793
  _LISTENABLEDFEATURERESPONSE._serialized_start=795
  _LISTENABLEDFEATURERESPONSE._serialized_end=894
  _FEATUREFLAGS._serialized_start=897
  _FEATUREFLAGS._serialized_end=1164
  _LIMITSTATUS._serialized_start=1167
  _LIMITSTATUS._serialized_end=1363
  _LIMITSTATUS_STATUS._serialized_start=1309
  _LIMITSTATUS_STATUS._serialized_end=1363
  _GETFEATUREFLAGJWTREQUEST._serialized_start=1365
  _GETFEATUREFLAGJWTREQUEST._serialized_end=1414
  _GETFEATUREFLAGJWTRESPONSE._serialized_start=1416
  _GETFEATUREFLAGJWTRESPONSE._serialized_end=1473
  _FEATUREFLAG._serialized_start=2003
  _FEATUREFLAG._serialized_end=2814
# @@protoc_insertion_point(module_scope)
