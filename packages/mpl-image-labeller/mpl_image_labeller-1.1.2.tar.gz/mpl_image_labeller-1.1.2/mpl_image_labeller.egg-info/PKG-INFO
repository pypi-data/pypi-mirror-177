Metadata-Version: 2.1
Name: mpl-image-labeller
Version: 1.1.2
Summary: Use interactive matplotlib to label images for classification
Home-page: https://mpl-image-labeller.rtfd.io
Author: Ian Hunt-Isaak
Author-email: ianhuntisaak@gmail.com
License: BSD-3-Clause
Project-URL: Tracker, https://github.com/ianhi/mpl-image-labeller/issues
Project-URL: Changelog, https://github.com/ianhi/mpl-image-labeller/releases
Project-URL: Documentation, https://mpl-image-labeller.rtfd.io
Project-URL: Source, https://github.com/ianhi/mpl-interactions
Classifier: Development Status :: 5 - Production/Stable
Classifier: Framework :: Matplotlib
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: Implementation :: CPython
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Provides-Extra: dev
Provides-Extra: doc
Provides-Extra: testing
License-File: LICENSE

# mpl-image-labeller

[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/ianhi/mpl-image-labeller/main?urlpath=lab/tree/docs/examples)
[![Documentation Status](https://readthedocs.org/projects/mpl-image-labeller/badge/?version=stable)](https://mpl-image-labeller.readthedocs.io/en/stable/?badge=stable)


[![License](https://img.shields.io/pypi/l/mpl-image-labeller.svg?color=green)](https://github.com/ianhi/mpl-image-labeller/raw/master/LICENSE)
[![PyPI](https://img.shields.io/pypi/v/mpl-image-labeller.svg?color=green)](https://pypi.org/project/mpl-image-labeller)
[![Python Version](https://img.shields.io/pypi/pyversions/mpl-image-labeller.svg?color=green)](https://python.org)

Use Matplotlib to label images for classification. Works anywhere Matplotlib does - from the notebook to a standalone gui!

For more see the [documentation](https://mpl-image-labeller.readthedocs.io/en/stable/?badge=stable).

## Install

```bash
pip install mpl-image-labeller
```
## Key features
- Simple interface
- Uses keys instead of mouse
- Only depends on Matplotlib
    - Works anywhere - from inside Jupyter to any supported GUI framework
- Displays images with correct aspect ratio
- Easily configurable keymap
- Smart interactions with default Matplotlib keymap
- Callback System (see `examples/callbacks.py`)

**single class per image**

![gif of usage for labelling images of cats and dogs](docs/_static/single_class.gif)

**multiple classes per image**

![gif of usage for labelling images of cats and dogs](docs/_static/multi_class.gif)

## Usage

```python
import matplotlib.pyplot as plt
import numpy as np

from mpl_image_labeller import image_labeller

images = np.random.randn(5, 10, 10)
labeller = image_labeller(
    images, classes=["good", "bad", "meh"], label_keymap=["a", "s", "d"]
)
plt.show()
```

**accessing the axis**
You can further modify the image (e.g. add masks over them) by using the plotting methods on
axis object accessible by `labeller.ax`.

**Lazy Loading Images**
If you want to lazy load your images you can provide a function to give the images. This function should take
the integer `idx` as an argument and return the image that corresponds to that index. If you do this then you
must also provide `N_images` in the constructor to let the object know how many images it should expect. See `examples/lazy_loading.py` for an example.

### Controls

- `<-` move one image back
- `->` move one image forward

To label images use the keys defined in the `label_keymap` argument - default 0, 1, 2...


Get the labels by accessing the `labels` property.

### Overwriting default keymap
Matplotlib has default keybindings that it applied to all figures via `rcparams.keymap` that allow for actions such as `s` to save or `q` to quit. If you inlcude one of these keys as a shortcut for labelling as a class then that default keymap will be disabled for that figure.


## Related Projects

This is not the first project to implement easy image labelling but seems to be the first to do so entirely in Matplotlib. The below
projects implement varying degrees of complexity and/or additional features in different frameworks.

- https://github.com/wbwvos/pidgey
- https://github.com/agermanidis/pigeon
- https://github.com/Serhiy-Shekhovtsov/tkteach
- https://github.com/robertbrada/PyQt-image-annotation-tool
- https://github.com/Cartucho/OpenLabeling
