# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetPrivateLocationResult',
    'AwaitableGetPrivateLocationResult',
    'get_private_location',
    'get_private_location_output',
]

@pulumi.output_type
class GetPrivateLocationResult:
    """
    A collection of values returned by getPrivateLocation.
    """
    def __init__(__self__, id=None, name=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")


class AwaitableGetPrivateLocationResult(GetPrivateLocationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPrivateLocationResult(
            id=self.id,
            name=self.name)


def get_private_location(name: Optional[str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPrivateLocationResult:
    """
    Use this data source to get information about a specific Synthetics monitor private location in New Relic that already exists.


    :param str name: The name of the Synthetics monitor private location.
    """
    __args__ = dict()
    __args__['name'] = name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('newrelic:synthetics/getPrivateLocation:getPrivateLocation', __args__, opts=opts, typ=GetPrivateLocationResult).value

    return AwaitableGetPrivateLocationResult(
        id=__ret__.id,
        name=__ret__.name)


@_utilities.lift_output_func(get_private_location)
def get_private_location_output(name: Optional[pulumi.Input[str]] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetPrivateLocationResult]:
    """
    Use this data source to get information about a specific Synthetics monitor private location in New Relic that already exists.


    :param str name: The name of the Synthetics monitor private location.
    """
    ...
