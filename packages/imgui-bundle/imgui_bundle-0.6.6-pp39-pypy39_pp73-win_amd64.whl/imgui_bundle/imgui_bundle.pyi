"""
"""

from typing import Tuple, Optional, Callable
import numpy as np
import enum

from imgui_bundle.hello_imgui import RunnerParams
from imgui_bundle.imgui_md import MarkdownOptions
from imgui_bundle.imgui_node_editor import Config as NodeEditorConfig


VoidFunction = Callable[[None], None]
ScreenSize = Tuple[int, int]
DefaultScreenSize = (800, 600)


# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  AUTOGENERATED CODE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# <litgen_stub> // Autogenerated code below! Do not edit!
####################    <generated_from:imgui_bundle.h>    ####################
# ///////////////////////////////////////////////////////////////////////////////////////
#
# Helper to run an app with "named params emulation" in C++
# (call it using designated initializers!)
#
# /////////////////////////////////////////////////////////////////////////////////////

class AddOnsParams:
    # Set withImplot=True if you need to plot graphs
    with_implot: bool = False

    # Set withMarkdown=True if you need to render Markdown
    # (alternatively, you can set withMarkdownOptions)
    with_markdown: bool = False

    # Set withNodeEditor=True if you need to render a node editor
    # (alternatively, you can set withNodeEditorConfig)
    with_node_editor: bool = False

    # You can tweak NodeEditorConfig (but this is optional)
    with_node_editor_config: Optional[NodeEditorConfig] = None

    # You can tweak MarkdownOptions (but this is optional)
    with_markdown_options: Optional[ImGuiMd.MarkdownOptions] = None

def run(
    runner_params: HelloImGui.RunnerParams,
    add_ons_params: AddOnsParams = AddOnsParams(),
) -> None:
    pass

def run(
    simple_params: HelloImGui.SimpleRunnerParams,
    add_ons_params: AddOnsParams = AddOnsParams(),
) -> None:
    pass

# ///////////////////////////////////////////////////////////////////////////////////////
#
# Helpers to run an app from Python (using named parameters)
#
# /////////////////////////////////////////////////////////////////////////////////////

def run(
    gui_function: VoidFunction,
    window_title: str = "",
    window_size_auto: bool = False,
    window_restore_previous_geometry: bool = False,
    window_size: ScreenSize = DefaultScreenSize,
    fps_idle: float = 10.0,
    with_implot: bool = False,
    with_markdown: bool = False,
    with_node_editor: bool = False,
    with_node_editor_config: Optional[NodeEditorConfig] = None,
    with_markdown_options: Optional[ImGuiMd.MarkdownOptions] = None,
) -> None:
    """Helper to run an app inside imgui_bundle, using HelloImGui:

    (HelloImGui::SimpleRunnerParams)
        - `guiFunction`: the function that will render the ImGui widgets
        - `windowTitle`: title of the window
        - `windowSizeAuto`: if True, autosize the window from its inner widgets
        - `windowRestorePreviousGeometry`: if True, restore window size and position from last run
        - `windowSize`: size of the window
        - `fpsIdle`: fps of the application when idle

    (ImGuiBundle::AddOnsParams)
        - `with_implot`: if True, then a context for implot will be created/destroyed automatically
        - `with_markdown` / `with_markdown_options`: if specified, then  the markdown context will be initialized
          (i.e. required fonts will be loaded)
        - `with_node_editor` / `with_node_editor_config`: if specified, then a context for imgui_node_editor
          will be created automatically.
    """
    pass

def clock_seconds() -> float:
    pass

def current_node_editor_context() -> ax.NodeEditor.EditorContext:
    pass
####################    </generated_from:imgui_bundle.h>    ####################

# </litgen_stub> // Autogenerated code end!
