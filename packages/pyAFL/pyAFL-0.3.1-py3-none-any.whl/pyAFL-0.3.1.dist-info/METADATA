Metadata-Version: 2.1
Name: pyAFL
Version: 0.3.1
Summary: Python data fetching library for the Australian Football League
Home-page: https://github.com/RamParameswaran/pyAFL
Author: Ram Parameswaran
Author-email: ram@findram.dev
License: MIT
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.5
License-File: LICENSE
Requires-Dist: appdirs (==1.4.4)
Requires-Dist: attrs (==20.2.0)
Requires-Dist: beautifulsoup4 (==4.9.2)
Requires-Dist: black (==20.8b1)
Requires-Dist: certifi (==2020.6.20)
Requires-Dist: chardet (==3.0.4)
Requires-Dist: click (==7.1.2)
Requires-Dist: coverage (==5.3)
Requires-Dist: dataclasses (==0.6)
Requires-Dist: flake8 (==3.8.3)
Requires-Dist: fuzzywuzzy (==0.18.0)
Requires-Dist: html5lib (==1.1)
Requires-Dist: idna (==2.10)
Requires-Dist: importlib-metadata (==2.0.0)
Requires-Dist: iniconfig (==1.0.1)
Requires-Dist: isort (==5.5.4)
Requires-Dist: lxml (==4.5.2)
Requires-Dist: mccabe (==0.6.1)
Requires-Dist: mypy (==0.782)
Requires-Dist: mypy-extensions (==0.4.3)
Requires-Dist: numpy (==1.19.2)
Requires-Dist: packaging (==20.4)
Requires-Dist: pandas (==1.1.2)
Requires-Dist: pathspec (==0.8.0)
Requires-Dist: pluggy (==0.13.1)
Requires-Dist: py (==1.9.0)
Requires-Dist: pycodestyle (==2.6.0)
Requires-Dist: pyflakes (==2.2.0)
Requires-Dist: pyparsing (==2.4.7)
Requires-Dist: pytest (==6.1.0)
Requires-Dist: pytest-cov (==2.10.1)
Requires-Dist: python-dateutil (==2.8.1)
Requires-Dist: pytz (==2020.1)
Requires-Dist: regex (==2020.9.27)
Requires-Dist: requests (==2.24.0)
Requires-Dist: requests-cache (==0.5.2)
Requires-Dist: six (==1.15.0)
Requires-Dist: soupsieve (==2.0.1)
Requires-Dist: toml (==0.10.1)
Requires-Dist: typed-ast (==1.4.1)
Requires-Dist: typing-extensions (==3.7.4.3)
Requires-Dist: urllib3 (==1.25.10)
Requires-Dist: webencodings (==0.5.1)
Requires-Dist: zipp (==3.2.0)

pyAFL is a AFL (Australian Football League) data fetching libary. It scrapes data from https://afltables.com/ and converts results to structured Python objects for easier analytics.
