# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['rxnutils',
 'rxnutils.chem',
 'rxnutils.chem.rinchi',
 'rxnutils.data',
 'rxnutils.data.ord',
 'rxnutils.data.uspto',
 'rxnutils.pipeline',
 'rxnutils.pipeline.actions']

package_data = \
{'': ['*']}

install_requires = \
['Deprecated>=1.2.13,<2.0.0',
 'PyYAML>=5.4.1,<6.0.0',
 'Sphinx>=5.0.1,<6.0.0',
 'metaflow>=2.6.3,<3.0.0',
 'pandas>=1.0.0,<2.0.0',
 'py7zr>=0.18.7,<0.19.0',
 'rdchiral>=1.1.0,<2.0.0',
 'rdkit>=2022.3.3,<2023.0.0',
 'swifter>=1.0.9,<2.0.0',
 'wrapt-timeout-decorator>=1.3.12,<2.0.0',
 'xxhash>=2.0.0,<3.0.0']

setup_kwargs = {
    'name': 'reaction-utils',
    'version': '1.2.0',
    'description': 'Utilities for working with reactions, reaction templates and template extraction',
    'long_description': "# rxnutils\n\n[![License](https://img.shields.io/github/license/MolecularAI/reaction_utils)](https://github.com/MolecularAI/reaction_utils/blob/master/LICENSE)\n[![Tests](https://github.com/MolecularAI/reaction_utils/workflows/tests/badge.svg)](https://github.com/MolecularAI/reaction_utils/actions?workflow=tests)\n[![codecov](https://codecov.io/gh/MolecularAI/reaction_utils/branch/main/graph/badge.svg?token=MQE7BDM1N8)](https://codecov.io/gh/MolecularAI/reaction_utils)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/python/black)\n\nUtilities to work with datasets of chemical reactions, reaction templates and template extraction\n\n## Prerequisites\n\nBefore you begin, ensure you have met the following requirements:\n\n* Linux OS (or in principle Windows or macOS)\n\n* You have installed [anaconda](https://www.anaconda.com/) or [miniconda](https://docs.conda.io/en/latest/miniconda.html) with python 3.8\n\nThe tool has been developed and fully tested on a Linux platform, but it is only occassionally tested on Windows and macOS.\nIf you find an issue on a Windows or macOS platform, we might be able to fix, but we might just disable that feature on those platforms.\n\n\n## Installation\n\n### For users\n\nSetup your python environment and then run\n\n    pip install reaction-utils\n\nConsult the documentation for further information.\n\n### For developers\n\nFirst clone the repository using Git.\n\nThen execute the following commands in the root of the repository\n\n    conda env create -f env-dev.yml\n    conda activate rxn-env\n    poetry install\n\nthe `rxnutils` package is now installed in editable mode.\n\nLastly, make sure to install pre-commits that are run on every commit\n\n    pre-commit install\n\n## Usage\n\nThe package is divided into (currently) three sub-packages:\n\n* `chem` - chemistry routines like template extraction or reaction cleaning\n* `data` - routines for manipulating various reaction data sources\n* `pipeline` - routines for building and executing simple pipelines for modifying and analyzing reactions\n\nThe full auto-generated API document is available [here](https://molecularai.github.io/reaction_utils/), and the documentation also provides a few examples on common tasks.\n\n## Development\n\n### Testing\n\nTests uses the ``pytest`` package, and is installed by `poetry`\n\nRun the tests using:\n\n    pytest -v\n\nThe full command with all flags for CI is available through an `invoke` command\n\n    invoke run-tests\n\n ### Documentation generation\n\nThe documentation is generated by Sphinx from hand-written tutorials and docstrings\n\nThe HTML documentation can be generated by\n\n    invoke build-docs\n\n### Linting\n\nLinting is done preferably with `pylint`. \n\n    invoke run-linting\n\nCurrently we do not use `mypy` to check type annotations, but this will be switched on in the future.\n\n## Contributing\n\nWe welcome contributions, in the form of issues or pull requests.\n\nIf you have a question or want to report a bug, please submit an issue.\n\nTo contribute with code to the project, follow these steps:\n\n1. Fork this repository.\n2. Create a branch: `git checkout -b <branch_name>`.\n3. Make your changes and commit them: `git commit -m '<commit_message>'`\n4. Push to the remote branch: `git push`\n5. Create the pull request.\n\nPlease use ``black`` package for formatting, and follow ``pep8`` style guide.\n\n\n## Contributors\n\n* [@ckannas](https://github.com/ckannas)\n* [@SGenheden](https://www.github.com/SGenheden)\n* [@EBjerrum](https://www.github.com/EBjerrum)\n* [@A-Thakkar](https://www.github.com/A-Thakkar)\n\nThe contributors have limited time for support questions, but please do not hesitate to submit an issue (see above).\n\n## License\n\nThe software is licensed under the Apache 2.0 license (see LICENSE file), and is free and provided as-is.\n\n## References\n\n1. Thakkar A, Kogej T, Reymond J-L, et al (2019) Datasets and their influence on the development of computer assisted synthesis planning tools in the pharmaceutical domain. Chem Sci. https://doi.org/10.1039/C9SC04944D\n\n2. Kannas C, Thakkar A, Bjerrum E, Genheden S (2022) rxnutils â€“ A Cheminformatics Python Library for Manipulating Chemical Reaction Data. ChemRxiv. https://doi.org/10.26434/chemrxiv-2022-wt440-v2\n",
    'author': 'Genheden, Samuel',
    'author_email': 'samuel.genheden@astrazeneca.com',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://github.com/MolecularAI/reaction_utils/',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.8,<4.0',
}


setup(**setup_kwargs)
